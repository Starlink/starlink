package kappa {
   version @PACKAGE_VERSION@
   prefix kap

   executable mem2d {

      action mem2d {
         alias {mem2(d)}

         helplib {$KAPPA_HELP}

         parameter analyse {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            default FALSE
            prompt {Do an analysis rather than a deconvolution?}
            helpkey *
         }

         parameter def {
            type _REAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {The constant value to use for the default model}
            helpkey *
         }

         parameter dsum {
            type _REAL
            access WRITE
            vpath DYNAMIC
            helpkey *
         }

         parameter extend {
            type _LOGICAL
            vpath DEFAULT
            default TRUE
            prompt {Are analysis data to be added to output NDF?}
            helpkey *
         }

         parameter fwhmicf {
            type _REAL
            vpath DEFAULT PROMPT DYNAMIC
            ppath CURRENT DEFAULT
            default 2
            prompt {Full width at half max. of the Gaussian ICF}
            helpkey *
         }

         parameter fwhmpsf {
            type _REAL
            access READ
            vpath PROMPT DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Full width at half max of the Gaussian PSF}
            helpkey *
         }

         parameter ilevel {
            type _INTEGER
            vpath CURRENT DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Amount of diagnostic information to display (0-3)}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter mask {
            type NDF
            access READ
            vpath PROMPT
            prompt {An NDF holding the analysis mask}
            helpkey *
         }

         parameter model {
            type NDF
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding the default model}
            helpkey *
         }

         parameter modelout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding a new default model}
            helpkey *
         }

         parameter niter {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 50
            prompt {Maximum number of MEMSYS3 iterations to perform}
            helpkey *
         }

         parameter noise {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default GAUSSIAN
            prompt {Type of noise statistics}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
         }

         parameter psf {
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {The input NDF}
            helpkey *
         }

         parameter psftype {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default NDF
            prompt {Type of PSF to use}
            helpkey *
         }

         parameter rate {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.5
            prompt {The dimensionless distance constraint}
            helpkey *
         }

         parameter sum {
            type _REAL
            access WRITE
            vpath DYNAMIC
            helpkey *
         }

         parameter thresh {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0625
            prompt {Truncation fractional threshold of PSF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Title for output NDF}
            helpkey *
         }

         parameter update {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Is output NDF to be updated every iteration?}
            helpkey *
         }

         parameter xcentre {
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
         }

         parameter ycentre {
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
         }
      }
   }

   executable ndfpack_mon {

      action axconv {
         alias {axco(nv)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be modified}
            helpkey *
         }

      }

      action axlabel {
         alias {axla(bel)}

         helplib {$KAPPA_HELP}

         parameter dim {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
         }

         parameter label {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF axis label}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

      }

      action axunits {
         alias {axun(its)}

         helplib {$KAPPA_HELP}

         parameter dim {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter units {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF axis units}
            helpkey *
         }

      }

      action erase {
         alias {eras()}

         helplib {$KAPPA_HELP}

         parameter object {
            position 1
            access WRITE
            vpath PROMPT
            prompt {HDS object to be erased?}
            helpkey *
         }

         parameter ok {
            type _LOGICAL
            access READ
            vpath PROMPT
            ppath DEFAULT
            default FALSE
            prompt {Confirm erasure?}
            helpkey *
         }

         parameter report {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Report an error if the object does not exist?}
            helpkey *
         }

      }

      action fitsdin {
         alias {fitsd(in)}

         helplib {$KAPPA_HELP}

         parameter encodings {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT CURRENT
            prompt {FITS keywords to use when creating NDF WCS components}
            helpkey *
            default !
         }

         parameter files {
            size *
            position 1
            type LITERAL
            vpath PROMPT
            prompt {Give a list of the FITS files to be processed}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            helpkey *
         }

         parameter auto {
            position 3
            type _LOGICAL
            vpath DEFAULT
            prompt {Automatic mode?}
            helpkey *
            default FALSE
         }

         parameter fmtcnv {
            position 4
            type _LOGICAL
            vpath PROMPT
            prompt {Convert data?}
            helpkey *
            default TRUE
         }

         parameter logfile {
            position 5
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store FITS headers}
            default !
            helpkey *
         }

         parameter glocon {
            type _LOGICAL
            vpath DEFAULT
            prompt {Data-conversion switch to apply globally?}
            helpkey *
            default FALSE
        }

         parameter dscftable {
            type FILENAME
            access WRITE
            vpath PROMPT
            prompt {Name of FACTS description file}
            helpkey *
        }

         parameter table {
            type FILENAME
            access WRITE
            vpath PROMPT
            prompt {Name of output table}
            helpkey *
         }

      }

      action fitsexist {
         alias {fitsexi(st)}

         helplib {$KAPPA_HELP}

         parameter exists {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            prompt {Object to store result of existence test}
            helpkey *
         }

         parameter keyword {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Keyword whose existence is to be determined}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to test for the presence of the FITS keyword}
            helpkey *
         }

      }

      action fitsexp {

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
         }

         parameter table {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS keyword translation table}
            helpkey *
         }

      }

      action fitsimp {
         alias {fitsim(p)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
         }

         parameter table {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS keyword translation table}
            helpkey *
         }

         parameter xname {
            position 3
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Output extension name}
            helpkey *
         }

         parameter xtype {
            position 4
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Output extension type}
            helpkey *
         }

      }

      action fitsin {

      }

      action fitslist {
         alias {fitsl(ist)}

         helplib {$KAPPA_HELP}

         parameter encoding {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT,DEFAULT
            prompt {Encoding for WCS keywords}
            default !
            helpkey *
         }

         parameter fullwcs {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Include headers for all WCS frames?}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter logfile {
            position 2
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store the FITS headers}
            default !
            helpkey *
         }

      }

      action fitsmod {
         alias {fitsm(od)}

         helplib {$KAPPA_HELP}

         parameter comment {
            position 5
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Comment to write}
            helpkey *
         }

         parameter edit {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Edit command}
            helpkey *
            default Read
         }

         parameter exists {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            prompt {Object to store result of final "Exist" operation}
            helpkey *
         }

         parameter keyword {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Keyword to edit}
            helpkey *
         }

         parameter mode {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode by which editing instructions are to be supplied}
            default Interface
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF containing FITS extension to edit}
            helpkey *
         }

         parameter newkey {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Renamed keyword}
            helpkey *
         }

         parameter position {
            position 6
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Position keyword}
            helpkey *
         }

         parameter readonly {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Open the NDF for reading only?}
            default FALSE
            helpkey *
         }

         parameter string {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the value a string?}
            default FALSE
            helpkey *
         }

         parameter table {
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS editing-instruction table}
            helpkey *
         }

         parameter value {
            position 4
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Value to write}
            helpkey *
         }

      }

      action fitstext {
         alias {fitst(ext)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
         }

         parameter file {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Text file of FITS Headers}
            helpkey *
         }

      }

      action fitsval {
         alias {fitsv(al)}

         helplib {$KAPPA_HELP}

         parameter comment {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default FALSE
            prompt {Object to store comment of FITS keyword}
            helpkey *
         }

         parameter keyword {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Keyword whose value is to be reported}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF containing the FITS keyword}
            helpkey *
         }

         parameter value {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default FALSE
            prompt {Object to store value of FITS keyword}
            helpkey *
         }

      }

      action hiscom {
         alias {hisc(om)}

         helplib {$KAPPA_HELP}

         parameter appname {
            type LITERAL
            ppath CURRENT
            vpath DEFAULT
            prompt {Application name}
            default !
            helpkey *
         }

         parameter comment {
            type LITERAL
            vpath PROMPT
            prompt {Comment line}
            helpkey *
         }

         parameter date {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Date associated with comment}
            helpkey *
         }

         parameter file {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File containing the commentary}
            helpkey *
         }

         parameter mode {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Interface
            prompt {Method by which to obtain commentary}
            helpkey *
         }

         parameter ndf {
				 # added
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be given commentary}
            helpkey *
         }

         parameter wrap {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Wrap the comments to the maximum width?}
            helpkey *
         }

      }

      action hislist {
         alias {hisl(ist)}

         helplib {$KAPPA_HELP}

         parameter brief {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Produce a brief listing?}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF whose history is to be listed}
            helpkey *
         }

      }

      action hisset {
         alias {hiss(et)}

         helplib {$KAPPA_HELP}

         parameter mode {
            position 2
            type _CHAR
            vpath DEFAULT
            ppath DEFAULT
            default Normal
            prompt {History update mode}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Dataset}
            helpkey *
         }

         parameter ok {
            type _LOGICAL
            vpath PROMPT
            ppath DEFAULT
            default FALSE
            prompt {Erase history?}
            helpkey *
         }

      }

      action native {
         alias {nati(ve)}

         helplib {$KAPPA_HELP}

         parameter object {
            position 1
            type UNIVERSAL
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {HDS object to convert}
            helpkey *
         }

      }

      action ndfcompress {
         alias {ndfcom(press)}

         helplib {$KAPPA_HELP}

         parameter dscale {
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Scale factor for Data component}
            helpkey *
            default !
         }

         parameter dzero {
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Zero offset for Data component}
            helpkey *
            default !
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter method {
            position 3
            type LITERAL
            access READ
            ppath CURRENT DEFAULT
            default DELTA
            prompt {Compression method}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter scaledtype {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default _WORD
            prompt {Data type for scaled values}
            helpkey *
         }

         parameter vscale {
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Scale factor for VARIANCE component}
            helpkey *
            default !
         }

         parameter vzero {
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Zero offset for VARIANCE component}
            helpkey *
            default !
         }

         parameter zaxis {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Index of compression axis}
            helpkey *
            default 0
         }

         parameter zminratio {
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Minimum acceptable compression ratio}
            helpkey *
            default 1.0
         }

         parameter ztype {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Data type for difference values}
            helpkey *
         }

      }

      action ndfcompare {
         alias {ndfcompare}

         helplib {$KAPPA_HELP}

         parameter accdat {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Maximum difference allowed between DATA values}
            helpkey *
            default {1E-6 R}
         }

         parameter accpos {
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Maximum allowed positional difference in pixels}
            helpkey *
            default 0.2
         }

         parameter accvar {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Maximum difference allowed between VARIANCE values}
            helpkey *
            default {1E-6 R}
         }

         parameter case {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Case sensitive string comparisons?}
            helpkey *
            default TRUE
         }

         parameter comp {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {List of NDF components to check for existence}
            helpkey *
            default !
         }

         parameter dotests {
            size *
            type _INTEGER
            access READ
            ppath DEFAULT
            vpath DEFAULT
            prompt {The initial list of tests to perform}
            default !
            helpkey *
         }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {The first NDF to compare}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {The second NDF to compare}
            helpkey *
         }

         parameter nbad {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Maximum difference in bad pixel counts}
            helpkey *
            default {0.001 R}
         }

         parameter report {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Text file in which to store the report}
            helpkey *
            default !
         }

         parameter skiptests {
            size *
            type _INTEGER
            access READ
            ppath DEFAULT
            vpath DEFAULT
            prompt {The list of tests to skip}
            default 15
            helpkey *
         }

         parameter similar {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            prompt {Object to store result of comparison}
            helpkey *
         }

         parameter white {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {Ignore leading and traing spaces in string comparisons?}
            helpkey *
            default FALSE
         }

      }

      action ndfcopy {
         alias {ndfc(opy)}

         helplib {$KAPPA_HELP}

         parameter comp {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {Array component containing data values}
            helpkey *
         }

         parameter exten {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Modify shape of extension NDFs?}
            helpkey *
            default FALSE
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF structure}
            helpkey *
         }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {NDF to use as a shape template}
            helpkey *
         }

         parameter likewcs {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Use the template WCS shape?}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey *
         }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Title for output NDF}
            helpkey *
         }

         parameter trim {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Remove insignificant output pixel axes?}
            helpkey *
            default FALSE
         }

         parameter trimbad {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Remove any border of bad pixels?}
            helpkey *
            default FALSE
         }

         parameter trimwcs {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Remove surplus output WCS axes?}
            helpkey *
            default TRUE
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The WCS axes to retain in the output}
            helpkey *
         }
      }

      action ndfecho {
         alias {ndfec(ho)}

         helplib {$KAPPA_HELP}


         parameter abspath {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Convert relative NDF paths to absolute?}
            helpkey *
            default FALSE
         }


         parameter exists {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Only display paths for existing and accessible NDFs?}
            helpkey *
            default FALSE
         }

         parameter first {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Index of first NDF to display}
            helpkey *
         }

         parameter last {
            position 4
            type _INTEGER
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Index of last NDF to display}
            helpkey *
         }

         parameter logfile {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Log file}
            default !
            helpkey *
         }

         parameter mod {
            position 2
            type LITERAL
            access READ
            ppath CURRENT,DEFAULT
            vpath DEFAULT
            default !
            prompt {The NDFs to be listed}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {A group of existing NDFs}
            helpkey *
         }

         parameter nmatch {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter pattern {
            type LITERAL
            access READ
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Pattern matching template}
            default !
            helpkey *
         }

         parameter show {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {The information to display about each NDF}
            default PATH
            helpkey *
         }

         parameter size {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter value {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

      }

      action ndftrace {
         alias {ndft(race)}

         helplib {$KAPPA_HELP}

         parameter flbnd {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter fubnd {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter aend {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter aform {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter alabel {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter flabel {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter amono {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter anorm {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter astart {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter atype {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter aunits {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter avariance {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter axis {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter bad {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default TRUE
            helpkey *
         }

         parameter badbits {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 000000
            helpkey *
         }

         parameter current {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter dims {
            size *
            type _INT64
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter extname {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter exttype {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter fdim {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter fdomain {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter form {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter fpixscale {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter ftitle {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter fullaxis {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Display full axis information?}
            helpkey *
         }

         parameter fullframe {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Display full co-ordinate Frame information?}
            helpkey *
         }

         parameter fullwcs {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Display full WCS information?}
            helpkey *
         }

         parameter funit {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter history {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter label {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter lbound {
            size *
            type _INT64
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF structure to examine}
            helpkey *
         }

         parameter ndim {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter nextn {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter nframe {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter quality {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter scale {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter sctype {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter title {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter type {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter ubound {
            size *
            type _INT64
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter units {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter wcs {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter width {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter zero {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

      }

      action qualtobad {
         alias {qualt(obad)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter qexp {
            position 3
            type LITERAL
            access READ
            ppath GLOBAL DEFAULT
            default ANY
            association <->GLOBAL.QUALITY_EXP
            prompt {Quality expression}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Title for output NDF}
            helpkey *
         }
      }

      action remqual {
         alias {remq(ual)}

         helplib {$KAPPA_HELP}

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Clear the corresponding bits in the Quality array?}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDFs from which to remove quality information}
            helpkey *
         }

         parameter qnames {
            position 2
            type LITERAL
            access UPDATE
            vpath PROMPT
            ppath CURRENT
            prompt {Quality names to be removed}
            helpkey *
         }

      }

      action setaxis {
         alias {seta(xis)}

         helplib {$KAPPA_HELP}

         parameter axisndf {
            type NDF
            access READ
            ppath CURRENT
            prompt {NDFs from which to read axis values}
            helpkey *
         }

         parameter comp {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {Axis array component to modify}
            helpkey *
         }

         parameter dim {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
         }

         parameter exprs {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Expression}
            helpkey *
         }

         parameter file {
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Text file containing replacement axis values}
            helpkey *
         }

         parameter index {
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Pixel index of the element}
            helpkey *
         }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {NDF containing axis structures to copy}
            helpkey *
         }

         parameter mode {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Type of modification}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter newval {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {New value for the array element}
            helpkey *
         }

         parameter type {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Data type of the modified array component}
            helpkey *
         }

      }

      action setbad {
         alias {setba(d)}

         helplib {$KAPPA_HELP}

         parameter data {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Process the data array?}
            helpkey *
         }

         parameter modify {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Modify the NDF?}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter value {
            position 2
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {New bad-pixel flag value}
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Process the variance array?}
            helpkey *
         }

      }

      action setbb {

         helplib {$KAPPA_HELP}

         parameter and {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Perform bit-wise AND with existing mask value?}
            helpkey *
         }

         parameter bb {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {New bad-bits mask value}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
         }

         parameter or {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Perform bit-wise OR with existing mask value?}
            helpkey *
         }

      }

      action setbound {
         alias {setbo(und)}

         helplib {$KAPPA_HELP}

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Template NDF}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to be modified}
            helpkey *
         }

      }

      action setext {
         alias {setex(t)}

         helplib {$KAPPA_HELP}

         parameter cname {
            position 4
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component name}
            helpkey *
         }

         parameter ctype {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component type}
            helpkey *
         }

         parameter cvalue {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component value}
            helpkey *
         }

         parameter loop {
				 # SETEXT is to operate in looping
				 # mode, accepting more that one option
				 # at a time.  Set this to TRUE to use
				 # SETEXT interactively or FALSE to use
				 # in an ICL procedure.  The parameter
				 # is only given on the command line,
				 # and should not be prompted for.
            type _LOGICAL
            vpath DEFAULT NOPROMPT
            prompt {Run in looping mode?}
            default TRUE
            helpkey *
         }

         parameter ndf {
				 # examined/modified.
            position 1
            type NDF
            vpath PROMPT
            ppath CURRENT
            prompt {NDF containing extension}
            association <-GLOBAL.NDF
            helpkey *
         }

         parameter newname {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {New component name}
            helpkey *
         }

         parameter ok {
            type _LOGICAL
            vpath PROMPT
            ppath DEFAULT
            default FALSE
            prompt {Do you still wish to proceed ? (Y/N)}
            helpkey *
         }

         parameter option {
            position 3
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Option to modify or examine the extension}
            helpkey *
         }

         parameter shape {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC CURRENT
            default 1
            prompt {Shape of the component}
            helpkey *
         }

         parameter xname {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default FITS
            prompt {Extension name}
            helpkey *
         }

         parameter xtype {
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default EXT
            prompt {Extension type}
            helpkey *
         }

      }

      action setlabel {
         alias {setl(abel)}

         helplib {$KAPPA_HELP}

         parameter label {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF label}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

      }

      action setnorm {
         alias {setno(rm)}

         helplib {$KAPPA_HELP}

         parameter anorm {
            type _LOGICAL
            vpath PROMPT
            ppath CURRENT
            prompt {New normalisation flag}
            helpkey *
         }

         parameter dim {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

      }

      action setorigin {
         alias {seto(rigin)}

         helplib {$KAPPA_HELP}

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Template NDF}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter origin {
            size *
            position 2
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {New pixel origin value(s)}
            helpkey *
         }

      }

      action setqual {
         alias {setq(ual)}

         helplib {$KAPPA_HELP}

         parameter ardfile {
            type FILENAME
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT DEFAULT
            association <->GLOBAL.ARDFILE
            prompt {ARD file}
            default ardfile.dat
            helpkey *
        }

         parameter comment {
            position 3
            type LITERAL
            access READ
            ppath CURRENT
            prompt {A short description of the assigned quality}
            helpkey *
         }

         parameter function {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default HS
            prompt {Function to be performed by SETQUAL}
            helpkey *
         }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {NDF from which quality information should be copied}
            helpkey *
         }

         parameter list {
            type LITERAL
            access READ
            ppath CURRENT
            prompt {A list of pixel indices}
            helpkey *
         }

         parameter mask {
            position 4
            type NDF
            access READ
            ppath CURRENT
            prompt {NDF which defines the selected pixels}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF in which to store quality information}
            helpkey *
         }

         parameter qname {
            position 2
            type LITERAL
            access UPDATE
            vpath PROMPT
            ppath CURRENT
            prompt {Quality name}
            helpkey *
         }

         parameter qvalue {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Quality value (0-255)}
            default !
            helpkey *
         }

         parameter readonly {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Flag that the quality name cannot be removed?}
            default FALSE
            helpkey *
         }

         parameter select {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath DEFAULT
            default Mask
            prompt {How do you want to identified select pixels?}
            helpkey *
         }

         parameter xname {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default QUALITY_NAMES
            prompt {NDF extension name}
            helpkey *
         }

         parameter xtype {
            type LITERAL
            access UPDATE
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {NDF extension type}
            helpkey *
         }

      }

      action setsky {
         alias {sets(ky)}

         helplib {$KAPPA_HELP}
         parameter coords {
            position 3
            type LITERAL
            vpath PROMPT
            prompt {Sky co-ordinate system}
            ppath CURRENT
            helpkey *
         }

         parameter epoch {
            position 4
            type _DOUBLE
            access READ
            vpath PROMPT
            prompt {Epoch of the data}
            ppath CURRENT DEFAULT
            default 1994.0D0
            helpkey *
         }

         parameter iras90 {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Create an IRAS90 astrometry structure?}
            helpkey *
         }

         parameter lat {
            position 7
            type LITERAL
            vpath DEFAULT PROMPT
            prompt {Latitude of the reference point}
            ppath CURRENT
            default !
            helpkey *
         }
         parameter logfile {
            position 12
            type LITERAL
            vpath DEFAULT PROMPT
            prompt {The name of a log file}
            ppath CURRENT
            default !
            helpkey *
         }

         parameter lon {
            position 6
            type LITERAL
            vpath DEFAULT PROMPT
            prompt {Longitude of the reference point}
            ppath CURRENT
            default !
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            prompt {NDF to have astrometry information appended}
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter orient {
            position 10
            type LITERAL
            vpath DEFAULT PROMPT
            prompt {Orientation of the image y-axis from north measured via east}
            ppath CURRENT
            default !
            helpkey *
         }

         parameter pixelref {
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            prompt {Pixel co-ordinates of the reference position}
            ppath CURRENT
            default !
            helpkey *
         }

         parameter pixelsize {
            position 9
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            prompt {Size of the pixels at the reference point}
            ppath CURRENT
            default !
            helpkey *
         }

         parameter positions {
            position 2
            type LITERAL
            vpath PROMPT
            prompt {A group of corresponding sky and image co-ordinates }
            helpkey *
         }
         parameter projtype {
            position 5
            type LITERAL
            vpath DEFAULT PROMPT
            prompt {Projection type}
            ppath CURRENT
            default !
            helpkey *
         }

         parameter refcode {
            position 8
            type LITERAL
            vpath DEFAULT PROMPT
            prompt {Location of the reference point}
            ppath CURRENT
            default !
            helpkey *
         }

         parameter tilt {
            position 11
            type LITERAL
            vpath DEFAULT
            prompt {Tilt of the celestial sphere prior to projection}
            ppath CURRENT
            default 0.0
            helpkey *
         }
      }

      action settitle {
         alias {setti(tle)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter title {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF title}
            helpkey *
         }

      }

      action settype {
         alias {setty(pe)}

         helplib {$KAPPA_HELP}

         parameter complex {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {NDF to hold complex values?}
            helpkey *
         }

         parameter data {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Set a new type for the data component?}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter type {
            position 2
            type LITERAL
            access UPDATE
            vpath PROMPT
            ppath DYNAMIC
            prompt {New numeric type}
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Set a new type for the VARIANCE component?}
            helpkey *
         }

      }

      action setunits {
         alias {setu(nits)}

         helplib {$KAPPA_HELP}

         parameter modify {
            position 3
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Modify the pixel values?}
            default FALSE
            helpkey '*'
        }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter units {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF units}
            helpkey *
         }

      }

      action setvar {
         alias {setv(ar)}

         helplib {$KAPPA_HELP}

         parameter comp {
            type LITERAL
            ppath CURRENT DEFAULT
            default DATA
            prompt {Array component containing variance values}
            helpkey *
         }

         parameter from {
            type NDF
            access READ
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {NDF containing existing variance values}
            default !
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter variance {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default DATA
            prompt {Variance expression}
            helpkey *
         }

      }

      action provadd {
         alias {prova(dd)}

         helplib {$KAPPA_HELP}

         parameter creator {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Name of software that created the modified NDF}
            helpkey *
         }

         parameter isroot {
            position 4
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Ignore any provenance within the parent NDF?}
            helpkey *
         }

         parameter moretext {
            position 5
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Group of keyword=value strings giving extra information about the parent}
            helpkey *
            default !
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be modified}
            helpkey *
         }

         parameter parent {
            position 2
            type NDF
            access READ
            ppath CURRENT
            prompt {Parent NDF}
            helpkey *
         }
      }

      action provmod {
         alias {provm(od)}

         helplib {$KAPPA_HELP}

         parameter ancestor {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default ALL
            prompt {The indices of the ancestors to be modified}
            helpkey *
         }

         parameter creator {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Substitutions for the CREATOR field}
            helpkey *
         }

         parameter date {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Substitutions for the DATE field}
            helpkey *
         }

         parameter moretext {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Group of keyword=value strings giving extra information about the ancestor}
            helpkey *
            default !
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be modified}
            helpkey *
         }

         parameter path {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Substitutions for the PATH field}
            helpkey *
         }

      }

      action provrem {
         alias {provr(em)}

         helplib {$KAPPA_HELP}

         parameter ancestor {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {The indices of the ancestors to be removed}
            helpkey *
         }

         parameter hide {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Hide the ancestors rather than deleting them?}
            helpkey *
          }

         parameter item {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default PATH
            prompt {Item of provenance information to check}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be modified}
            helpkey *
         }

         parameter pattern {
            position 2
            type LITERAL
            access READ
            ppath CURRENT
            prompt {Pattern matching template}
            helpkey *
         }

         parameter remove {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Remove the specified ancestors?}
            helpkey *
         }

      }

      action provshow {
         alias {provsh(ow)}

         helplib {$KAPPA_HELP}

         parameter dotfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename in which to store graph in dot format}
            default !
            helpkey *
         }

         parameter hide {
            type _LOGICAL
            access READ
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default TRUE
            prompt {Exclude any hidden ancestors?}
            helpkey *
          }

         parameter history {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Show history for each ancestor NDF?}
            helpkey *
          }

         parameter inext {
            type LITERAL
            access READ
            prompt {Integer identifier for parent to display, or UP}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter parents {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename in which to store direct parents}
            default !
            helpkey *
         }

         parameter show {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default ALL
            prompt {The ancestors to be displayed}
            helpkey *
         }

      }

      action showqual {
         alias {showq(ual)}

         helplib {$KAPPA_HELP}

         parameter count {
            position 2
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Is a count of pixels holding each quality required?}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter qnames {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

      }

      action wcsadd {
         alias {wcsad(d)}

         helplib {$KAPPA_HELP}

         parameter attrs {
            type LITERAL
            ppath DEFAULT
            prompt {Attributes for new Frame}
            helpkey *
            default !
        }

         parameter centre {
            size *
            type _DOUBLE
            access READ
            ppath CURRENT DEFAULT
            vpath PROMPT
            prompt {Centre (X,Y) co-ordinates for distortion}
            default 0.0 0.0
            helpkey *
        }

         parameter diag {
            size *
            type _DOUBLE
            access READ
            ppath CURRENT
            vpath PROMPT
            prompt {Diagonal matrix coefficients}
            helpkey *
        }

         parameter disco {
            type _DOUBLE
            access READ
            ppath CURRENT
            vpath PROMPT
            prompt {Pincusion distortion coefficient}
            helpkey *
        }

         parameter domain {
            position 3
            type LITERAL
            access READ
            ppath CURRENT
            prompt {The Domain name for the new Frame}
            helpkey *
         }

         parameter epoch {
            type _DOUBLE
            access READ
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
        }

         parameter forexp {
            size *
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Forward transformation expressions}
            helpkey *
        }

         parameter frame {
            position 2
            type LITERAL
            access READ
            ppath CURRENT DEFAULT
            prompt {An existing co-ordinate Frame}
            helpkey *
            default !
        }

         parameter frmtype {
            type LITERAL
            access READ
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Type of co-ordinate frame to add}
            default !
            helpkey *
        }

         parameter invexp {
            size *
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Inverse transformatijon expressions}
            helpkey *
        }

         parameter mapin {
            type LITERAL
            access READ
            ppath CURRENT
            vpath PROMPT
            prompt {File containing AST Mapping}
            helpkey *
        }

         parameter mapout {
            type LITERAL
            access READ
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {File to contain output AST Mapping}
            default !
            helpkey *
        }

         parameter maptype {
            position 4
            type LITERAL
            access READ
            ppath CURRENT DEFAULT
            vpath PROMPT
            prompt {Type of mapping to use}
            default {LINEAR}
            helpkey *
        }

         parameter naxes {
            type _INTEGER
            access READ
            ppath CURRENT
            vpath PROMPT
            prompt {Number of input and output axes}
            helpkey *
        }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF in which to store the new Frame, or null}
            helpkey *
        }

         parameter refndf {
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {An NDF from which to copy the required Frame}
            helpkey *
        }

         parameter retain {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Retain the original current Frame in the modified NDF?}
            default FALSE
            helpkey *
        }

         parameter shift {
            size *
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Translation coefficients}
            helpkey *
        }

         parameter simpfi {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Simplify forward plus inverse to unit mapping?}
            default TRUE
            helpkey *
        }

         parameter simpif {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Simplify inverse plus forward to unit mapping?}
            default TRUE
            helpkey *
        }

         parameter tr {
            size *
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Co-efficients of a linear transformation}
            default !
            helpkey *
        }

         parameter transfer {
            type _LOGICAL
            access READ
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Transfer set attributes from basis Frame to new Frame?}
            helpkey *
        }

         parameter zoom {
            type _DOUBLE
            access READ
            ppath CURRENT
            vpath PROMPT
            prompt {Scaling factor}
            helpkey *
        }

      }

      action wcsattrib {
         alias {wcsat(trib)}

         helplib {$KAPPA_HELP}

         parameter mode {
            position 2
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Operation to perform}
            default GET
            helpkey *
         }

         parameter name {
            position 3
            type LITERAL
            ppath CURRENT
            prompt {Attribute name}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be read or modified}
            helpkey *
         }

         parameter newval {
            position 4
            type LITERAL
            ppath DYNAMIC
            prompt {Attribute value}
            helpkey *
         }

         parameter remap {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Modify mappings to accommodate new attribute value?}
            helpkey *
        }

         parameter setting {
            type LITERAL
            ppath DYNAMIC
            prompt {List of attribute settings}
            helpkey *
         }

         parameter state {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default TRUE
            helpkey *
         }

         parameter value {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
         }

      }

      action wcscopy {
         alias {wcsc(opy)}

         helplib {$KAPPA_HELP}

         parameter confirm {
            position 4
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should replacement of any existing WCS component be confirmed?}
            default TRUE
            helpkey *
         }

         parameter like {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {An NDF containing WCS information}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be modified}
            helpkey *
         }

         parameter ok {
            type _LOGICAL
            access READ
            ppath DEFAULT
            prompt {Replace the existing WCS component?}
            default FALSE
            helpkey *
         }

         parameter tr {
            size *
            position 3
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Co-efficients of a linear transformation}
            default !
            helpkey *
         }

      }

      action wcsframe {
         alias {wcsf(rame)}

         helplib {$KAPPA_HELP}

         parameter epoch {
            position 3
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
         }

         parameter frame {
            position 2
            type LITERAL
            ppath DYNAMIC CURRENT DEFAULT
            prompt {Required co-ordinate Frame}
            helpkey *
            default !
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be modified}
            helpkey *
         }

      }

      action wcsremove {
         alias {wcsr(emove)}

         helplib {$KAPPA_HELP}

         parameter frames {
            size *
            position 2
            type _CHAR
            vpath PROMPT
            prompt {The indices of the Frames to be removed}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be modified}
            helpkey *
         }

      }

      action wcsshow {
         alias {wcss(how)}

         helplib {$KAPPA_HELP}

         parameter cat {
            type FILENAME
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association <-GLOBAL.POSITIONS_LIST
            prompt {Catalogue or positions list}
            default !
            helpkey *
         }

         parameter full {
            position 5
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Level of detail in output (-1,0,+1)}
            default 0
            helpkey *
         }

         parameter logfile {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Log file}
            default !
            helpkey *
         }

         parameter newwcs {
            position 4
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Group expression giving new WCS FrameSet}
            default !
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
         }

         parameter object {
            position 2
            access WRITE
            vpath PROMPT
            prompt {HDS object}
            helpkey *
         }

         parameter quiet {
            position 6
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            default !
            prompt {Run without displaying Object structure?}
            helpkey *
         }

      }

      action chain {
         alias {chai(n)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Base NDF structure}
            helpkey *
         }

         parameter c1 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
         }

         parameter c2 {
            position 3
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c3 {
            position 4
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c4 {
            position 5
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c5 {
            position 6
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c6 {
            position 7
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c7 {
            position 8
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c8 {
            position 9
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c9 {
            position 10
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c10 {
            position 11
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c11 {
            position 12
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c12 {
            position 13
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c13 {
            position 14
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c14 {
            position 15
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c15 {
            position 16
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c16 {
            position 17
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c17 {
            position 18
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c18 {
            position 19
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c19 {
            position 20
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c20 {
            position 21
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c21 {
            position 22
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c22 {
            position 23
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c23 {
            position 24
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c24 {
            position 25
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter c25 {
            position 26
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
         }

         parameter out {
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action reshape {
         alias {resha(pe)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be reshaped}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Reshaped NDF}
            helpkey *
         }

         parameter shape {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Shape of the output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter vectorize {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Vectorize the arrays?}
            default FALSE
            helpkey *
         }

      }

   }

   executable kapview_mon {

      action ardplot {
         alias {ardp(lot)}

         helplib {$KAPPA_HELP}

         parameter ardfile {
            position 1
            type FILENAME
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT DEFAULT
            association <->GLOBAL.ARDFILE
            prompt {ARD file}
            default ardfile.dat
            helpkey *
        }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default FALSE
         }

         parameter device {
            position 2
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
        }

         parameter region {
            type FILENAME
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Text file containing AST Region to be outlined}
            default !
            helpkey *
        }

         parameter regval {
            position 3
            type _INTEGER
            prompt {Index of the region to plot (0 = all)}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0
            helpkey *
        }

         parameter size {
            type _REAL
            prompt {Size of plot (in units of the Region size)}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 2.0
            helpkey *
        }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
        }

      }

      action clinplot {
         alias {clinp(lot)}

         helplib {$KAPPA_HELP}

         parameter align {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Align the spectra with an existing picture?}
            default FALSE
            helpkey *
         }

         parameter axes {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default TRUE
            prompt {Produce annotated celestial axes?}
            helpkey *
         }

         parameter blankedge {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default TRUE
            prompt {Remove annotation and ticks from edge cells?}
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
         }

         parameter comp {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Component to display}
            helpkey *
            default Data
         }

         parameter device {
            position 3
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter downsample {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should the spectral axis be downsampled for plotting?}
            helpkey *
            default TRUE
         }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DYNAMIC DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter key {
            type _LOGICAL
            prompt {Do you want a key to the cell axes?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal and vertical position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.03
         }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
         }

         parameter lmode {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {How to choose default y-axis bounds}
            helpkey *
            default Range
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around spatial axes}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
         }

         parameter mode {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for displaying the data curves}
            default Line
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {3-dimensional array to be displayed}
            helpkey *
         }

         parameter nx {
            position 4
            type _INTEGER
            vpath DYNAMIC
            ppath DYNAMIC DEFAULT
            default 5
            prompt {No. of spectra in each row}
            helpkey *
         }

         parameter ny {
            position 5
            type _INTEGER
            vpath DYNAMIC
            ppath DYNAMIC DEFAULT
            default 5
            prompt {No. of spectra in each column}
            helpkey *
         }

         parameter reflabel {
            type _LOGICAL
            prompt {Put labels around the first line plot?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter specaxes {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Produce spectral axes?}
            helpkey *
         }

         parameter specstyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the line plot axes}
            helpkey *
            default !
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the spatial axes}
            helpkey *
            default !
         }

         parameter useaxis {
            position 2
            type _INTEGER
            vpath DYNAMIC
            ppath DYNAMIC DEFAULT
            default 3
            prompt {Spectral axis}
            helpkey *
         }

         parameter ybot {
            type _REAL
            prompt {Minimum data value to display in each spectrum}
            vpath DYNAMIC
            ppath DYNAMIC
            helpkey *
         }

         parameter ytop {
            type _REAL
            prompt {Maximum data value to display in each spectrum}
            vpath DYNAMIC
            ppath DYNAMIC
            helpkey *
         }

      }

      action colcomp {
         alias {colc(omp)}

         helplib {$KAPPA_HELP}

         parameter badcol {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Colour of bad pixels}
            ppath CURRENT DEFAULT
            default MIN
            helpkey *
         }

         parameter device {
            position 6
            ptype DEVICE
            vpath GLOBAL PROMPT
            prompt {Name of display device}
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            helpkey *
         }

         parameter inr {
            position 1
            type NDF
            prompt {The red NDF}
            ppath CURRENT
            helpkey *
         }

         parameter ing {
            position 2
            type NDF
            prompt {The green NDF}
            ppath CURRENT
            helpkey *
         }

         parameter inb {
            position 3
            type NDF
            prompt {The blue NDF}
            ppath CURRENT
            helpkey *
         }

         parameter out {
            position 4
            type NDF
            prompt {The output NDF containing an image of colour indices}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter lut {
            position 5
            type NDF
            prompt {The output NDF containing the colour table}
            association ->GLOBAL.LUT
            helpkey *
         }

         parameter percentiles {
            type _REAL
            prompt {Percentiles for default scaling}
            ppath CURRENT DEFAULT
            default 5 95
            helpkey *
            size *
         }

         parameter ppm {
            type FILENAME
            access READ
            vpath DEFAULT
            prompt {Filename to store output PPM image}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter rlow {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to zero red intensity}
            helpkey *
         }

         parameter rhigh {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to full red intensity}
            helpkey *
         }

         parameter glow {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to zero green intensity}
            helpkey *
         }

         parameter ghigh {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to full green intensity}
            helpkey *
         }

         parameter blow {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to zero blue intensity}
            helpkey *
         }

         parameter bhigh {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to full blue intensity}
            helpkey *
         }

      }


      action contour {
         alias {cont(our)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
         }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to contour}
            helpkey *
            default Data
         }

         parameter dashed {
            type _REAL
            prompt {Height below which contours are dashed}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter device {
            ptype DEVICE
            position 6
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter fast {
            type _LOGICAL
            prompt {Optimise drawing speed?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter firstcnt {
            type _REAL
            prompt {Give the height of the first contour}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
         }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter heights {
            size *
            type _REAL
            prompt {Give the heights of the contours}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
         }

         parameter key {
            position 5
            type _LOGICAL
            prompt {Do you want a key to contour levels?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal and vertical position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.05
         }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
         }

         parameter labpos {
            type _REAL
            prompt {Position for label in Good and Bounds modes}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter lastcnt {
            type _REAL
            prompt {Give the height of the last contour}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
         }

         parameter length {
            size *
            type _REAL
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter mode {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Method for selecting contour heights}
            helpkey *
         }

         parameter ncont {
            position 4
            type _INTEGER
            prompt {Give the number of contour heights}
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 6
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be contoured}
            helpkey *
         }

         parameter number {
            size *

            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter pen1 {
            size *
            type _INTEGER
            access UPDATE
            vpath INTERNAL
            helpkey *
         }

         parameter penrot {
            type _LOGICAL
            prompt {Is the graphics pen to be cycled through 3 colours?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter pens {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Pen definitions for each contour}
            helpkey *
            default !
         }

         parameter percentiles {
            size *
            type _REAL
            prompt {Give the heights of the contours as percentiles}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
         }

         parameter stats {
            type _LOGICAL
            prompt {Are contouring statistics to be computed?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter stepcnt {
            type _REAL
            prompt {Give the interval between contour heights}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and contours}
            helpkey *
            default !
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The axes to be annotated}
            helpkey *
         }

      }

      action cursor {
         alias {curs(or)}

         helplib {$KAPPA_HELP}

         parameter catframe {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Output catalogue co-ordinate Frame}
            helpkey *
            default !
        }

         parameter catepoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Output catalogue epoch}
            helpkey *
        }

         parameter close {
            type _LOGICAL
            prompt {Are polygons to be closed?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter comp {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to display}
            default Data
            helpkey *
         }

         parameter describe {
            type _LOGICAL
            prompt {Are co-ordinate Frames to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter device {
            ptype DEVICE
            position 4
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter epoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
         }

         parameter frame {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Required co-ordinate Frame}
            helpkey *
            default !
         }

         parameter geodesic {
            type _LOGICAL
            prompt {Should polygon edges be geodesic curves?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter info {
            type _LOGICAL
            prompt {Should the use of the mouse be described?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter just {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Justification for displayed text strings}
            helpkey *
            default CC
         }

         parameter lastdim {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter lastpos {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to store cursor co-ordinates}
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {The PGPLOT type for position markers}
            default 2
            helpkey *
         }

         parameter maxpos {
            type _INTEGER
            access READ
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Maximum number of positions which can be supplied}
            helpkey *
         }

         parameter minpos {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Minimum number of positions which must be supplied}
            default 0
            helpkey *
         }

         parameter mode {
            position 1
            type LITERAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Co-ordinate system/picture mode}
            default Dynamic
            helpkey *
         }

         parameter name {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Name of pictures to be selected}
            default !
            helpkey *
         }

         parameter number {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter outcat {
            position 3
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Output positions list}
            association ->GLOBAL.CATALOGUE
            default !
            helpkey *
         }

         parameter plot {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default NONE
            prompt {What sort of graphics should be used?}
            helpkey *
         }

         parameter showdata {
            type _LOGICAL
            prompt {Also report pixel values?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter showpixel {
            type _LOGICAL
            prompt {Also report pixel co-ordinates?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter strings {
            type LITERAL
            ppath DEFAULT
            prompt {Strings to mark positions}
            helpkey *
            default !
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Style for graphics and formatted axis values}
            helpkey *
            default !
         }

      }

      action drawnorth {
         alias {drawn(orth)}

         helplib {$KAPPA_HELP}

         parameter arrow {
            type _REAL
            vpath CURRENT DEFAULT
            prompt {Fractional size of arrow heads}
            ppath CURRENT DEFAULT
            default 0.02
            helpkey *
        }

         parameter blank {
            type _LOGICAL
            vpath DEFAULT
            prompt {Blank area behind arrows?}
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
        }

	 parameter blanksize {
            type _REAL
            vpath DEFAULT
            prompt {Fractional size of area to be blanked}
            ppath CURRENT DEFAULT
            default 1.05
            helpkey *
        }

         parameter device {
            position 1
            ptype DEVICE
            vpath GLOBAL PROMPT
            prompt {Name of graphics device}
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            helpkey *
        }

         parameter epoch {
            type _DOUBLE
            prompt {Epoch of observation}
            ppath DYNAMIC CURRENT
            helpkey *
        }

         parameter frame {
            type LITERAL
            vpath DEFAULT
            prompt {Co-ordinate Frame for arrows}
            ppath CURRENT DEFAULT
            default !
            helpkey *
        }

         parameter length {
            position 2
            type _REAL
            vpath CURRENT DEFAULT
            prompt {Lengths of arrows}
            ppath CURRENT DEFAULT
            default 0.1
            helpkey *
        }

         parameter oframe {
            type LITERAL
            vpath DEFAULT
            prompt {Co-ordinate Frame for origin}
            ppath CURRENT DEFAULT
            default CURNDC
            helpkey *
        }

         parameter origin {
            position 3
            type LITERAL
            prompt {Position of arrow origin}
            ppath CURRENT DEFAULT
            vpath DEFAULT
            default !
            helpkey *
        }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Plotting style for the arrows}
            ppath CURRENT DEFAULT
            default !
            helpkey *
        }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {The axes to be annotated}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
        }
      }

      action drawsig {
         alias {draw(sig)}

         helplib {$KAPPA_HELP}

         parameter axis {
            position 3
            type LITERAL
            prompt {Orientation of lines}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Y
            helpkey *
         }

         parameter comp {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to process}
            default Data
            helpkey *
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Array to be analysed}
            helpkey *
         }

         parameter nsigma {
            size *
            position 2
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Sigma levels}
            default 1.0
            helpkey *
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the lines}
            helpkey *
            default !
         }

      }

      action display {
         alias {disp(lay)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter badcol {
            type LITERAL
            prompt {Colour of bad pixels}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default MIN
         }

         parameter border {
            type _LOGICAL
            prompt {Is a coloured border required?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter borstyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the border}
            helpkey *
            default !
         }

         parameter centre {
            position 6
            type LITERAL
            prompt {Position at the centre of the display}
            vpath DEFAULT
            ppath DYNAMIC CURRENT
            default !
            helpkey *
         }

         parameter clear {
            position 3
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before display?}
            helpkey *
            default TRUE
         }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to display}
            helpkey *
            default Data
         }

         parameter device {
            ptype DEVICE
            position 4
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of display device}
            helpkey *
         }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter high {
            type _DOUBLE
            prompt {High value for display}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be displayed}
            helpkey *
         }

         parameter key {
            type _LOGICAL
            prompt {Do you want a key to the colour table?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default {0.05, 0.5}
         }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
         }

         parameter low {
            type _DOUBLE
            prompt {Low value for display}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
         }

         parameter lut {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {NDF containing lookup table}
            helpkey *
            default !
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter mode {
            position 5
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Method to define the scaling limits}
            helpkey *
         }

         parameter nn {
            type _LOGICAL
            prompt {Nearest-neighbour mapping of lookup table?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter numbin {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 2048
            prompt {Number of bins to compute percentiles}
            helpkey *
         }

         parameter out {
            position 9
            type NDF
            access WRITE
            vpath DEFAULT
            prompt {NDF for scaled data}
            helpkey *
            default !
         }

         parameter penrange {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0 1.0
            prompt {Range of pens to use}
            helpkey *
            size *
         }

         parameter percentiles {
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 10 90
            prompt {Percentiles for scaling}
            helpkey *
            size *
         }

         parameter scahigh {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the upper scaling value.}
            association ->GLOBAL.DISP_SCALE_HIGH
            default 0.0
         }

         parameter scale {
            type _LOGICAL
            prompt {Scale the data?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter scalow {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the lower scaling value.}
            association ->GLOBAL.DISP_SCALE_LOW
            default 0.0
         }

         parameter sigmas {
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default -2 2
            prompt {Standard-deviation limits for scaling}
            helpkey *
            size *
         }

         parameter sqrpix {
            type _LOGICAL
            prompt {Should all pixels be displayed as squares?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes}
            helpkey *
            default !
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {The axes to be annotated}
            default !
            helpkey *
         }

         parameter xmagn {
            position 7
            type _REAL
            prompt {Magnification in X co-ordinate about the centre of array}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            helpkey *
         }

         parameter ymagn {
            position 8
            type _REAL
            prompt {Magnification in Y co-ordinate about the centre of array}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

      }

      action elprof {
         alias {elpr(of)}

         helplib {$KAPPA_HELP}

         parameter anglim {
            size *
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            default 0.0
            prompt {Azimuthal angles defining the sector to be binned}
            helpkey *
         }

         parameter angmaj {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0
            prompt {Angle from X-axis to ellipse major axis}
            helpkey *
         }

         parameter estimator {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Mean
            prompt {Method for estimating output pixel values}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter mask {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Output NDF to hold pixel mask}
            helpkey *
         }

         parameter mtitle {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output mask NDF}
            default {Mask created by KAPPA - Elprof}
            helpkey *
         }

         parameter nbin {
            position 3
            type _INTEGER
            ppath CURRENT DEFAULT
            default 20
            prompt {Number of bins to use}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Binned output NDF}
            helpkey *
         }

         parameter radial {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Radial (as opposed to azimuthal) profile?}
            helpkey *
         }

         parameter ratio {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            prompt {Ratio of the ellipse minor axis to the major axis}
            helpkey *
         }

         parameter rmax {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Radius to outer edge of outer-most annulus}
            helpkey *
         }

         parameter rmin {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0
            prompt {Radius to inner edge of inner-most annulus}
            helpkey *
         }

         parameter title {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Title for binned output NDF}
            default {KAPPA - Elprof}
            helpkey *
         }

         parameter width {
            type _REAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC CURRENT
            prompt {Bin size}
            default !
            helpkey *
         }

         parameter xc {
            position 4
            type _REAL
            access READ
            ppath CURRENT DYNAMIC
            prompt {X pixel co-ordinate of ellipse centre}
            helpkey *
         }

         parameter yc {
            position 5
            type _REAL
            access READ
            ppath CURRENT DYNAMIC
            prompt {Y pixel co-ordinate of ellipse centre}
            helpkey *
         }

      }

      action gdclear {
         alias {gdcl(ear)}

         helplib {$KAPPA_HELP}

         parameter current {
            position 2
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clear just the current picture?}
            default FALSE
            helpkey *
         }

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

      }

      action gdnames {
         alias {gdna(mes) sho(dev)}
      }

      action gdset {
         alias {gdse(t)}

         helplib {$KAPPA_HELP}

         parameter device {
            position 1
            ptype DEVICE
            access READ
            prompt {Graphics device}
            helpkey *
            vpath PROMPT
            association ->GLOBAL.GRAPHICS_DEVICE
         }

      }

      action gdstate {
         alias {gdst(ate)}

         helplib {$KAPPA_HELP}

         parameter comment {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
        }

         parameter describe {
            type _LOGICAL
            vpath CURRENT DEFAULT
            prompt {Show a description of the requested Frame?}
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
        }

         parameter device {
            position 1
            ptype DEVICE
            access UPDATE
            vpath GLOBAL CURRENT
            prompt {Graphics device}
            association <-GLOBAL.GRAPHICS_DEVICE
            helpkey *
         }

         parameter domain {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter epoch {
            type _DOUBLE
            prompt {Epoch of observation}
            ppath DYNAMIC CURRENT
            helpkey *
         }

         parameter frame {
            position 2
            type LITERAL
            vpath DEFAULT
            prompt {Co-ordinate Frame to be displayed}
            ppath DEFAULT
            default !
            helpkey *
         }

         parameter label {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter name {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter outline {
            type _LOGICAL
            access READ
            vpath DEFAULT
            prompt {Outline the current picture?}
            helpkey *
            default FALSE
         }

         parameter refnam {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter report {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Report results?}
            default TRUE
            helpkey *
         }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Plotting style for the outline}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter x1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter x2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter y1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter y2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

      }

      action linplot {
         alias {linp(lot)}

         helplib {$KAPPA_HELP}

         parameter align {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Align the horizontal axis with the existing plot?}
            default !
            helpkey *
         }

         parameter alignsys {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Co-ordinate system in which to align old and new plots}
            helpkey *
            default Data
         }

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Produce annotated axes?}
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
         }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Component to display}
            helpkey *
            default Data
         }

         parameter device {
            position 8
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter errbar {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Draw error bars on the graph?}
            helpkey *
            default FALSE
         }

         parameter freq {
            type _INTEGER
            prompt {Frequency of plotted error bars}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1
         }

         parameter key {
            type _LOGICAL
            prompt {Do you want a key?}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
         }

         parameter lmode {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Method for determining default Y bounds}
            helpkey *
            default Extended
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
         }

         parameter mode {
            position 3
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for displaying the data curve}
            default Line
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {1-D array to be displayed}
            helpkey *
         }

         parameter shape {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for displaying the errors}
            helpkey *
            default Bars
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and data curve}
            helpkey *
            default !
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {The axis to be annotated}
            default !
            helpkey *
         }

         parameter xleft {
            position 4
            type LITERAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter xmap {
            type LITERAL
            vpath DEFAULT
            prompt {Mapping of X axis onto screen}
            ppath DEFAULT
            default Default
            helpkey *
        }

         parameter xright {
            position 5
            type LITERAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter xsigma {
            type _REAL
            prompt {Number of standard deviations for horizontal error bars}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1.0
         }

         parameter ybot {
            position 6
            type LITERAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ymap {
            type LITERAL
            vpath DEFAULT
            prompt {Mapping of Y axis onto screen}
            ppath DEFAULT
            default Linear
            helpkey *
        }

         parameter ysigma {
            type _REAL
            prompt {Number of standard deviations for vertical error bars}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1.0
         }

         parameter ytop {
            position 7
            type LITERAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

      }

      action lutable {
         alias {luta(ble)}

         helplib {$KAPPA_HELP}

         parameter coltab {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Kind of colour table}
            helpkey *
         }

         parameter device {
            position 4
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of display device}
            helpkey *
         }

         parameter full {
            type _LOGICAL
            prompt {Write to the full colour table?}
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter lut {
            position 3
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.LUT
            prompt {NDF containing input LUT}
            helpkey *
         }

         parameter mapping {
            position 1
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Type of scaling between limits}
            helpkey *
         }

         parameter ndf {
            position 5
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image for histogram equalisation}
            helpkey *
         }

         parameter nn {
            type _LOGICAL
            prompt {Nearest-neighbour mapping?}
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter percentiles {
            position 6
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 10 90
            prompt {Percentile limits for the histogram}
            helpkey *
            size *
         }

         parameter shade {
            position 7
            type _REAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Type of shading}
            helpkey *
         }

      }

      action lutedit {
         alias {lute(dit)}

         helplib {$KAPPA_HELP}

         parameter device {
            position 3
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of display device}
            helpkey *
         }

         parameter lut {
            position 1
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF containing input LUT}
            ppath GLOBAL CURRENT
            association <->GLOBAL.LUT
            default !
            helpkey *
         }

         parameter image {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Image to display}
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            helpkey *
         }
      }

      action lutsave {
         alias {lutsa(ve)}

         helplib {$KAPPA_HELP}

         parameter device {
            position 2
            ptype DEVICE
            vpath GLOBAL PROMPT
            prompt {Name of display device}
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            helpkey *
         }

        parameter full {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the full colour-table to be saved?}
            default FALSE
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            prompt {Text file in which to store colour-table}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter lut {
            position 1
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Lookup-table NDF}
            association ->GLOBAL.LUT
            helpkey *
         }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Title for output NDF}
            default {KAPPA - Lutsave}
            helpkey *
         }
      }

      action lutview {
         alias {lutv(iew)}

         helplib {$KAPPA_HELP}

         parameter comp {
            type LITERAL
            vpath DEFAULT
            prompt {Displayed NDF component}
            ppath CURRENT DEFAULT
            default Data
            helpkey *
         }

         parameter curpic {
            position 4
            type _LOGICAL
            vpath DEFAULT
            prompt {Restrict to the current picture?}
            ppath DEFAULT
            default FALSE
            helpkey *
         }

         parameter device {
            position 5
            ptype DEVICE
            vpath GLOBAL PROMPT
            prompt {Name of display device}
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            helpkey *
         }

          parameter epoch {
            type _DOUBLE
            prompt {Epoch of observation}
            ppath DYNAMIC CURRENT
            helpkey *
         }

         parameter frame {
            type LITERAL
            vpath DEFAULT
            prompt {Required co-ordinate Frame}
            ppath DEFAULT
            default BASEPIC
            helpkey *
         }

         parameter high {
            position 3
            type _REAL
            vpath GLOBAL DEFAULT
            prompt {Value corresponding to highest colour index}
            ppath GLOBAL DEFAULT
            default !
            association <-GLOBAL.DISP_SCALE_HIGH
            helpkey *
         }

         parameter lbound {
            type LITERAL
            prompt {Lower bound}
            ppath DYNAMIC
            helpkey *
         }

         parameter low {
            position 2
            type _REAL
            vpath GLOBAL DEFAULT
            prompt {Value corresponding to lowest colour index}
            ppath GLOBAL DEFAULT
            default !
            association <-GLOBAL.DISP_SCALE_LOW
            helpkey *
         }

         parameter lut {
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF containing lookup table}
            default !
            helpkey *
         }

         parameter mode {
            position 1
            type LITERAL
            vpath DEFAULT
            prompt {Positioning method}
            ppath DEFAULT
            default CURSOR
            helpkey *
         }

         parameter ndf {
            type NDF
            access READ
            vpath DEFAULT
            prompt {Displayed image}
            ppath GLOBAL DEFAULT
            association <-GLOBAL.DATA_ARRAY
            default !
            helpkey *
         }

         parameter nn {
            type _LOGICAL
            vpath DEFAULT
            prompt {Nearest-neighbour mapping of lookup table?}
            default FALSE
            helpkey *
         }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotation}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter ubound {
            type LITERAL
            prompt {Upper bound}
            ppath DYNAMIC
            helpkey *
         }
      }

      action mlinplot {
         alias {mlin(plot)}

         helplib {$KAPPA_HELP}

         parameter absaxs {
            type _INTEGER
            prompt {Dimension of the NDF to use as abscissa}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 1
         }

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Produce annotated axes?}
            default !
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
         }

         parameter comp {
            position 2
            type LITERAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Component to plot}
            helpkey *
         }

         parameter device {
            ptype DEVICE
            position 9
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of display device}
            helpkey *
         }

         parameter errbar {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Draw error bars on the graph?}
            helpkey *
            default FALSE
         }

         parameter freq {
            type _INTEGER
            prompt {Frequency of plotted error bars}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1
         }

         parameter key {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Plot a key of the offsets?}
            helpkey *
            default TRUE
         }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal and vertical position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.05
         }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
         }

         parameter labels {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Labels for each curve}
            helpkey *
            default !
         }

         parameter linlab {
            type _LOGICAL
            prompt {Should a label be included within each curve}
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            helpkey *
         }

         parameter lnindx {
            position 3
            type LITERAL
            prompt {Select lines to plot}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
         }

         parameter mode {
            position 4
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for displaying the data curve}
            default Line
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image to be plotted}
            helpkey *
         }

         parameter offset {
            size *
            type _REAL
            vpath PROMPT
            ppath CURRENT
            prompt {Offset value for each line }
            helpkey *
         }

         parameter pens {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Pen definitions for each curve}
            helpkey *
            default !
         }

         parameter sigma {
            type _REAL
            prompt {Number of standard deviations for vertical error bars}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1.0
         }

         parameter space {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Method to offset the lines}
            default AVERAGE
            helpkey *
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and data curves}
            helpkey *
            default !
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {The axis to be annotated}
            default !
            helpkey *
         }

         parameter xleft {
            position 5
            type LITERAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter xright {
            position 6
            type LITERAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ybot {
            position 7
            type LITERAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ylog {
            type _LOGICAL
            prompt {Is the logarithm of the data to be displayed?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter ytop {
            position 8
            type LITERAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter zmark {
            type _LOGICAL
            prompt {Should zero point markers be drawn?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

      }

      action paldef {
         alias {pald(ef)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Image-display device}
            helpkey *
         }

      }

      action palentry {
         alias {pale(ntry)}

         helplib {$KAPPA_HELP}

         parameter colour {
            size *
            position 2
            type LITERAL
            vpath PROMPT
            prompt {New palette colour}
            helpkey *
         }

         parameter device {
            ptype DEVICE
            position 3
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Image-display device}
            helpkey *
         }

         parameter palnum {
            position 1
            type _INTEGER
            vpath PROMPT
            prompt {Number of the palette entry to be modified}
            helpkey *
         }

      }

      action palread {
         alias {palr(ead)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Image-display device}
            helpkey *
         }

         parameter palette {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF containing the palette of reserved colours}
            helpkey *
         }

      }

      action palsave {
         alias {pals(ave)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Image-display device}
            helpkey *
         }

         parameter palette {
            position 1
            type NDF
            access WRITE
            vpath PROMPT
            prompt {NDF to save the palette of reserved colours}
            helpkey *
         }

         parameter title {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Title for the palette NDF}
            helpkey *
            default {KAPPA - Palsave}
         }

      }

      action piccur {
         alias {picc(ur)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
        }

         parameter name {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Name of pictures to be selected}
            default !
            helpkey *
        }

         parameter single {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Allow only a single position to be supplied?}
            helpkey *
        }

      }

      action picdef {
         alias {picd(ef) defp(ic)}

         helplib {$KAPPA_HELP}

         parameter aspect {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Aspect ratio of the new picture}
            helpkey *
            default !
         }

         parameter current {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Is the current picture to enclose the new picture?}
            helpkey *
            default FALSE
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter fill {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Linear filling factor}
            helpkey *
            default 1.0
         }

         parameter fraction {
            size *
            position 2
            type _REAL
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Linear fractions of the picture to form the new picture}
            helpkey *
            default 0.5
         }

         parameter labelno {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Label number of the bottom-left picture in the array}
            helpkey *
            default 1
         }

         parameter lbound {
            size *
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Lower bound}
            helpkey *
         }

         parameter mode {
            position 1
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            default Cursor
            prompt {Which option is required ?}
            helpkey *
         }

         parameter outline {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Mark the new picture with a box?}
            helpkey *
            default TRUE
         }

         parameter prefix {
            type _CHAR
            vpath PROMPT
            ppath CURRENT
            prompt {Label prefix. Type ! to prevent labelling}
            helpkey *
            default !
         }

         parameter size {
            size *
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Dimensions of the new picture in centimetres}
            helpkey *
            default !
         }

         parameter ubound {
            size *
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Upper bound}
            helpkey *
         }

         parameter xpic {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Number of pictures per line of the array}
            helpkey *
         }

         parameter ypic {
            position 4
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Number of pictures per column of the array}
            helpkey *
         }

      }

      action picempty {
         alias {picem(pty)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

      }

      action picentire {
         alias {pice(ntire)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

      }

      action picin {
         alias {pici(n)}

         helplib {$KAPPA_HELP}

         parameter comment {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter current {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Include current picture in search?}
            default FALSE
            helpkey *
         }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
        }

         parameter device {
            access READ
            position 2
            prompt {Graphics device}
            helpkey *
            vpath GLOBAL CURRENT
            ptype DEVICE
            association <-GLOBAL.GRAPHICS_DEVICE
         }

         parameter domain {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter epoch {
            type _DOUBLE
            prompt {Epoch of observation}
            ppath DYNAMIC CURRENT
            helpkey *
         }

         parameter frame {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Co-ordinate Frame to be displayed}
            ppath DEFAULT
            default !
            helpkey *
         }

         parameter label {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter name {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Name of interior picture}
            default DATA
            helpkey *
         }

         parameter pname {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter refnam {
				 # picture
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter report {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Report results?}
            default TRUE
            helpkey *
         }

         parameter x1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter x2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter y1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter y2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }
      }

      action piclabel {
         alias {piclab(el)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter label {
            position 1
            type LITERAL
            vpath PROMPT
            prompt {Label to be given to the current picture}
            helpkey *
         }

      }

      action piclist {
         alias {picli(st)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 3
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter logfile {
            position 2
            type FILENAME
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to store list of pictures}
            default !
            helpkey *
         }

         parameter name {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Name of pictures to be selected}
            default !
            helpkey *
         }

         parameter picnum {
            type LITERAL
            access READ
            vpath PROMPT
            ppath DEFAULT
            prompt {Number of new current picture}
            default !
            helpkey *
         }

      }

      action picsel {
         alias {pics(el)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter label {
            position 1
            type _CHAR
            vpath PROMPT
            ppath CURRENT
            prompt {Label of the picture to be selected}
            helpkey *
         }

      }

      action pictrans {
         alias {pict(rans)}

         helplib {$KAPPA_HELP}

         parameter bound {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default TRUE
            helpkey *
        }

         parameter device {
            ptype DEVICE
            position 4
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
        }

         parameter epochin {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of input position}
            helpkey *
        }

         parameter epochout {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of output position}
            helpkey *
        }

         parameter framein {
            position 2
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Input co-ordinate Frame}
            helpkey *
            default PIXEL
        }

         parameter frameout {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Output co-ordinate Frame}
            helpkey *
            default !
        }

         parameter posin {
            position 1
            type LITERAL
            prompt {Position to be transformed}
            ppath CURRENT
            helpkey *
        }

         parameter posout {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
        }

      }

      action picvis {
         alias {picv(is)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

      }

      action scatter {
         alias {scat(ter)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should graphics workstation be cleared?}
            default TRUE
            helpkey *
         }

         parameter comp1 {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Component to display on horizontal axis}
            helpkey *
            default Data
         }

         parameter comp2 {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Component to display on vertical axis}
            helpkey *
            default Data
         }

         parameter compress {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Compression factors}
            helpkey *
         }

         parameter corr {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter device {
            position 5
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter fit {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Display a linear fit?}
            helpkey *
         }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF for horizontal axis}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for vertical axis}
            helpkey *
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 1
            helpkey *
         }

         parameter npix {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter offset {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
         }

         parameter perc1 {
            type _REAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Percentile range for horizontal axis}
            default (5 95)
            helpkey *
            size *
         }

         parameter perc2 {
            type _REAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Percentile range for vertical axis}
            default (5 95)
            helpkey *
            size *
         }

         parameter rms {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
         }

         parameter slope {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
         }

         parameter xleft {
            type _DOUBLE
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter xright {
            type _DOUBLE
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ybot {
            type _DOUBLE
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ytop {
            type _DOUBLE
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

      }

      action vecplot {
         alias {vecp(lot)}

         helplib {$KAPPA_HELP}

         parameter angrot {
            type _REAL
            prompt {Angle by which to rotate the vectors (in degrees)}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.0
         }

         parameter arrow {
            type _REAL
            position 6
            prompt {Fractional size of arrow heads}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.0
         }

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath DEFAULT
            default TRUE
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
         }

         parameter comp {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to plot vector magnitudes}
            helpkey *
            default Data
         }

         parameter device {
            position 8
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter just {
            position 7
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Vector justification}
            default CENTRE
            helpkey *
         }

         parameter key {
            type _LOGICAL
            prompt {Do you want a key showing the vector scale?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal and vertical position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.05
         }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
         }

         parameter keyvec {
            type _REAL
            prompt {Key vector magnitude}
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter ndf1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF giving vector magnitudes}
            helpkey *
         }

         parameter ndf2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {NDF giving vector orientations}
            helpkey *
         }

         parameter step {
            position 4
            type _INTEGER
            prompt {Increment in pixels between adjacent vectors}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and vectors}
            helpkey *
            default !
         }

         parameter vscale {
            position 5
            type _REAL
            prompt {Data value for a 1-centimetre vector}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The axes to be annotated}
            helpkey *
         }

      }

   }

   executable kappa_mon {

      action add {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action align2d {
         alias {align(2d)}

         helplib {$KAPPA_HELP}

         parameter box {
            type _integer
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Larger of maximum expected shift or feature size, in pixels}
            default 5
            helpkey *
         }

         parameter conserve {
            type _LOGICAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Conserve flux?}
            helpkey *
         }

         parameter corlimit {
            type _real
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Lower limit on local correlation for usable input pixels}
            default !
            helpkey *
         }

         parameter fitvals {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Adjust pixel value scale and offset as part of the fitting process?}
            default FALSE
            helpkey *
         }

         parameter form {
            type _integer
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Form of transformation to use (0-3)}
            default 0
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter method {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Re-sampling method}
            helpkey *
            default {Nearest}
         }

         parameter norm {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Normalise output values?}
            helpkey *
            default TRUE
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            ppath DEFAULT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output aligned NDF}
            default !
            helpkey *
         }

         parameter params {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Auxiliary resampling parameters}
            helpkey *
         }

         parameter rebin {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Create output pixel values by rebinning input pixels?}
            helpkey *
            default FALSE
         }

         parameter ref {
            position 2
            type NDF
            access READ
            ppath CURRENT
            prompt {The reference NDF}
            helpkey *
         }

         parameter RMS {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0
            helpkey *
         }

         parameter tol {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.05
            prompt {Tolerance for linear transformation approximation}
            helpkey *
         }

         parameter tr {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter wlim {
            type _REAL
            prompt {Minimum weight for valid output pixels}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

      }

      action aperadd {
         alias {aper(add)}

         helplib {$KAPPA_HELP}

         parameter ardfile {
            type FILENAME
            access READ
            vpath DEFAULT
            prompt {ARD file defining the aperture}
            ppath GLOBAL CURRENT DEFAULT
            default !
            association <->GLOBAL.ARDFILE
            helpkey *
         }

         parameter centre {
            position 2
            type LITERAL
            prompt {Centre of circular aperture}
            ppath CURRENT
            helpkey *
         }

         parameter diam {
            position 3
            type LITERAL
            prompt {Diameter of circular aperture}
            ppath CURRENT
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            prompt {File for logging results}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter mask {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Output NDF}
            default !
            helpkey *
         }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            prompt {Data structure to analyse}
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter ngood {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter numpix {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter sigma {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }
         parameter sigmean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter sigtotal {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter total {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {The current Frame axes to be used}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter weight {
            type _LOGICAL
            vpath DEFAULT
            prompt {Weight pixel data using inverse variances?}
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }
      }

      action ardgen {
         alias {ardg(en)}

         helplib {$KAPPA_HELP}

         parameter ardout {
            position 1
            type FILENAME
            vpath PROMPT
            prompt {Name of the output text file}
            default ardfile.dat
            ppath GLOBAL CURRENT DEFAULT
            association ->GLOBAL.ARDFILE
            helpkey *
        }

         parameter device {
            position 4
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
        }

         parameter operands {
            size *
            type _INTEGER
            prompt {Indices of regions to combine or invert}
            ppath DYNAMIC
            vpath PROMPT
            helpkey *
        }

         parameter operator {
            type LITERAL
            prompt {How to combine the regions}
            ppath DYNAMIC DEFAULT
            vpath PROMPT
            default AND
            helpkey *
        }

         parameter option {
            position 3
            type LITERAL
            prompt {Next operation to perform}
            ppath DYNAMIC DEFAULT
            vpath PROMPT
            default MULTI
            helpkey *
        }

         parameter regions {
            size *
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {A list of region indices}
            default '*'
            helpkey *
        }

         parameter shape {
            position 2
            type LITERAL
            prompt {Region shape}
            ppath DYNAMIC DEFAULT
            vpath PROMPT
            default CIRCLE
            helpkey *
        }

         parameter startup {
            position 5
            type LITERAL
            prompt {Start up mode}
            ppath DEFAULT
            vpath DEFAULT PROMPT
            default Multi
            helpkey *
        }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
        }

         parameter undo {
            type _LOGICAL
            ppath DEFAULT
            default FALSE
            prompt {Undo the previous changes to the list of regions?}
            helpkey *
        }
      }

      action ardmask {
         alias {ardm(ask)}

         helplib {$KAPPA_HELP}

         parameter ardfile {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            prompt {Masking ARD file}
            ppath GLOBAL CURRENT DEFAULT
            default ardfile.dat
            association <->GLOBAL.ARDFILE
            helpkey *
         }
         parameter comp {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            prompt {NDF array component to mask}
            ppath CURRENT DEFAULT
            default ALL
            helpkey *
         }
         parameter const {
            type LITERAL
            vpath DEFAULT
            prompt {New value for masked pixels}
            ppath CURRENT DEFAULT
            default BAD
            helpkey *
         }
         parameter defpix {
            type _LOGICAL
            vpath DEFAULT
            prompt {Use pixel co-ordinates by default?}
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }
         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF to be masked}
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter inside {
            type _LOGICAL
            vpath DEFAULT
            prompt {Mask the inside of the ARD region?}
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }
         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Masked NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }
      }

      action beamfit {
         alias {beam(fit)}

         helplib {$KAPPA_HELP}

         parameter amp {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            prompt {Object to contain the amplitude and its error for the primary beam}
            helpkey *
         }

         parameter ampratio {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Ratios of amplitudes of secondary features relative to the primary}
            helpkey *
         }

         parameter back {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            prompt {Object to contain the background and its error for the primary beam}
            helpkey *
         }

         parameter beams {
            position 3
            type _INTEGER
            ppath CURRENT
            vpath DEFAULT
            prompt {Number of beam features to fit}
            helpkey *
            default 1
        }

         parameter centre {
            size *
            access WRITE
            type LITERAL
            vpath INTERNAL
            prompt {Object to contain the position and its error for the primary beam}
            helpkey *
         }

         parameter circular {
            type _LOGICAL
            prompt {Are the beams circular?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter coin {
            type FILENAME
            ppath CURRENT
            prompt {Text file containing initial positions}
            helpkey *
         }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter fixamp {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Fixed amplitude of the primary beam}
            helpkey *
         }

         parameter fitarea {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Size of region to fit}
            helpkey *
         }

         parameter fixback {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Fixed background level}
            helpkey *
         }

         parameter fixfwhm {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fix beam FWHM(s) at supplied size(s)?}
            default FALSE
            helpkey *
         }

         parameter fixpos {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fix beam location(s) at supplied position(s)?}
            default FALSE
            helpkey *
         }

         parameter fixsep {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fix secondary beam seaparation(s) at supplied position(s)?}
            default FALSE
            helpkey *
         }

         parameter fwhm {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Initial FWHM(s)}
            helpkey *
         }

         parameter gamma {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            prompt {Object to contain the shape exponent and its error for the primary beam}
            helpkey *
         }

         parameter gauss {
            type _LOGICAL
            vpath DEFAULT
            prompt {Constrain to normal-Gaussian fits?}
            helpkey *
            default TRUE
         }

         parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list containing initial positions}
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store the screen output}
            default !
            helpkey *
         }

         parameter majfwhm {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            prompt {Object to contain the major-axis FWHM and its error for the primary beam}
            helpkey *
         }

         parameter mark {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Positions to mark}
            helpkey *
            default Fit
         }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {The PGPLOT type for position markers}
            default 2
            helpkey *
         }

         parameter minfwhm {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            prompt {Object to contain the minor-axis FWHM and its error for the primary beam}
            helpkey *
         }

         parameter mode {
            position 2
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode used to obtain initial positions}
            default Interface
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Array to be analysed}
            helpkey *
         }

         parameter offset {
            size *
            access WRITE
            type LITERAL
            vpath INTERNAL
            prompt {Object to contain the offsets of secondary positions with respect to the primary beam and corresponding errors}
            helpkey *
         }

         parameter orient {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            prompt {Object to contain the beam orientation and its error for the primary beam}
            helpkey *
         }

         parameter pa {
            size *
            access WRITE
            type _REAL
            vpath INTERNAL
            prompt {Object to contain the position angles of secondary positions with respect to the primary beam and corresponding errors}
            helpkey *
         }

         parameter plotstyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Style for graphics markers}
            helpkey *
            default !
         }

         parameter polar {
            type _LOGICAL
            ppath DEFAULT
            vpath DEFAULT
            default TRUE
            prompt {Use polar co-ordinates for POS2)--POS5 parameters?}
            helpkey *
         }

         parameter pos {
            position 4
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Initial position of primary beam}
            helpkey *
         }

         parameter pos2 {
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Initial position of first secondary beam}
            helpkey *
         }

         parameter pos3 {
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Initial position of second secondary beam}
            helpkey *
         }

         parameter pos4 {
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Initial position of third secondary beam}
            helpkey *
         }

         parameter pos5 {
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Initial position of fourth secondary beam}
            helpkey *
         }

         parameter refoff {
            size *
            access WRITE
            type LITERAL
            vpath INTERNAL
            prompt {Object to contain the offset of the primary beam with respect to the reference point and its error}
            helpkey *
         }

         parameter refpos {
            type LITERAL
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Reference position}
            helpkey *
         }

         parameter resid {
            type NDF
            access WRITE
            vpath DEFAULT
            prompt {NDF for the map of the residuals}
            default !
            helpkey *
         }

         parameter rms {
            access WRITE
            type _REAL
            vpath DEFAULT
            default 0
            prompt {Object to contain the rms of the fit}
            helpkey *
         }


         parameter sum {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            default 0
            prompt {Object to contain the total data sum in the fit}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for residuals NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Weight using variance array, if available?}
            default FALSE
            helpkey *
         }

      }

      action block {
         alias {bloc(k)}

         helplib {$KAPPA_HELP}

         parameter box {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3 3
            prompt {Smoothing box size}
            helpkey *
            size *
         }

         parameter estimator {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Mean
            prompt {Method for estimating smoothed pixel values}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {Output title}
            helpkey *
         }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
         }

      }

      action cadd {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Value to be added}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action calc {

         helplib {$KAPPA_HELP}

         parameter fa {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fb {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fc {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fd {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fe {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter ff {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fg {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fh {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fi {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fj {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fk {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fl {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fm {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fn {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fo {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fp {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fq {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fr {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fs {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter ft {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fu {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fv {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fw {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fx {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fy {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter fz {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
         }

         parameter exp {
            position 1
            type LITERAL
            prompt {Expression to evaluate}
            vpath PROMPT
            ppath CURRENT
            helpkey *
         }

         parameter pa {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pb {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pc {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pd {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pe {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pf {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pg {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter ph {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pi {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 3.14159265359D0
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pj {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pk {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pl {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pm {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pn {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter po {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pp {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pq {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pr {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter ps {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pt {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pu {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pv {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pw {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter px {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter py {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter pz {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
         }

         parameter prec {
            position 2
            type LITERAL
            prompt {Precision of the evaluation}
            vpath DEFAULT
            ppath CURRENT
            helpkey *
            default _REAL
         }

         parameter result {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

      }

      action calpol {
         alias {calp(ol)}

         helplib {$KAPPA_HELP}

         parameter debias {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Remove statistical bias?}
            helpkey *
         }

         parameter i {
            position 7
            type NDF
            access WRITE
            prompt {Total intensity }
            association ->GLOBAL.POL_I
            helpkey *
         }

         parameter in1 {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <->GLOBAL.POL_0
            prompt {0-degree intensity map}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            ppath CURRENT
            prompt {45-degree intensity map}
            association <->GLOBAL.POL_45
            helpkey *
         }

         parameter in3 {
            position 3
            type NDF
            access READ
            ppath CURRENT
            prompt {90-degree intensity map}
            association <->GLOBAL.POL_90
            helpkey *
         }

         parameter in4 {
            position 4
            type NDF
            access READ
            ppath CURRENT
            prompt {135-degree intensity map}
            association <->GLOBAL.POL_135
            helpkey *
         }

         parameter ia {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Total intensity from 0- and 90-degree intensities}
            helpkey *
         }

         parameter ib {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Total intensity from 45- and 135-degree intensities}
            helpkey *
         }

         parameter ip {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Polarised intensity}
            helpkey *
         }

         parameter p {
            position 5
            type NDF
            access WRITE
            association ->GLOBAL.POL_P
            prompt {Percentage polarisation}
            helpkey *
         }

         parameter q {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Normalise Stokes parameter Q}
            helpkey *
         }

         parameter theta {
            position 6
            type NDF
            access WRITE
            prompt {Polarisation angle}
            association ->GLOBAL.POL_THETA
            helpkey *
         }

         parameter u {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Normalised Stokes parameter U}
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Are variance values to be generated?}
            helpkey *
         }

      }

      action carpet {
         alias {carp(et)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Input image}
            helpkey *
         }

         parameter mode {
            position 5
            type LITERAL
            vpath DEFAULT
            prompt {Method for calculating output values}
            ppath CURRENT DEFAULT
            default Data
            helpkey *
         }

         parameter ndatapix {
            position 3
            type _INTEGER
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default 100
            prompt {Number of pixels on output data-value axis}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            ppath CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output cube}
            helpkey *
         }

         parameter range {
            position 4
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Range of values on output data-value axis}
            helpkey *
         }

         parameter sigma {
            position 6
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Standard deviation in input image}
            helpkey *
         }

      }

      action cdiv {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Division constant}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action centroid {
         alias {cent(roid)}

         helplib {$KAPPA_HELP}

         parameter catframe {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Output catalogue co-ordinate Frame}
            helpkey *
            default !
        }

         parameter catepoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Output catalogue epoch}
            helpkey *
        }

         parameter centre {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the centroid position}
            default { }
            helpkey *
         }

         parameter cerror {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Calculate centroid errors?}
            helpkey *
            default FALSE
         }

         parameter coin {
            type FILENAME
            ppath CURRENT
            prompt {Text file containing initial positions}
            helpkey *
         }

         parameter coout {
            type FILENAME
            vpath DEFAULT
            ppath DEFAULT
            prompt {Text file to hold centroid positions}
            default !
            helpkey *
         }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter error {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the centroid errors}
            default { }
            helpkey *
         }

         parameter guess {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Display initial guesses?}
            default FALSE
            helpkey *
         }

         parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list containing initial positions}
            helpkey *
         }

         parameter init {
            position 3
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Initial position}
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store the screen output}
            default !
            helpkey *
         }

         parameter mark {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Positions to mark}
            helpkey *
            default Centroid
         }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {The PGPLOT type for position markers}
            default 2
            helpkey *
         }

         parameter maxiter {
            position 5
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            default 9
            prompt {Maximum number of iterations}
            helpkey *
         }

         parameter maxshift {
            size *
            position 6
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            default 9.0
            prompt {Maximum shift between guess and output}
            helpkey *
         }

         parameter mode {
            position 2
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode used to obtain initial positions}
            default Interface
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Array to be analysed}
            helpkey *
         }

         parameter nsim {
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            default 100
            prompt {Number of simulations to estimate the errors}
            helpkey *
         }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            association ->GLOBAL.CATALOGUE
            prompt {Output positions list}
            default !
            helpkey *
         }

         parameter plotstyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Style for graphics markers}
            helpkey *
            default !
         }

         parameter positive {
            type _LOGICAL
            ppath DEFAULT
            vpath DEFAULT
            default TRUE
            prompt {Array features positive}
            helpkey *
         }

         parameter search {
            size *
            position 4
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            default 9
            prompt {Size of search box in pixels}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output positions list}
            default !
            helpkey *
         }

         parameter toler {
            position 7
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            default 0.05
            prompt {Accuracy required}
            helpkey *
         }

         parameter xcen {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the x centroid position}
            default { }
            helpkey *
         }

         parameter xerr {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the x centroid error}
            default { }
            helpkey *
         }

         parameter ycen {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the y centroid position}
            default { }
            helpkey *
         }

         parameter yerr {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the y centroid error}
            default { }
            helpkey *
         }

      }

      action chanmap {
         alias {chan(map)}

         helplib {$KAPPA_HELP}

         parameter axis {
            position 3
            type LITERAL
            prompt {The axis to be collapsed}
            ppath DYNAMIC
            helpkey *
         }

         parameter clip {
            type _REAL
            vpath DEFAULT
            prompt {Clipping standard deviation}
            ppath CURRENT DEFAULT
            default 3.0
            helpkey *
         }

         parameter estimator {
            position 8
            type LITERAL
            vpath DEFAULT
            prompt {Method for estimating collapsed pixel values}
            ppath CURRENT DEFAULT
            default Mean
            helpkey *
         }

         parameter high {
            position 7
            type LITERAL
            vpath DEFAULT
            prompt {Axis value at end of channel range}
            ppath DYNAMIC
            default !
            helpkey *
         }

        parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter low {
            position 6
            type LITERAL
            vpath DEFAULT
            prompt {Axis value at start of channel range}
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter nchan {
            size *
            position 4
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Total number of channels}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter shape {
            position 5
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Number of channels along x axis of the output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Output title}
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The WCS axes to retain in the output}
            helpkey *
         }

         parameter wlim {
            position 9
            type _REAL
            vpath DEFAULT
            prompt {Weight limit for good output pixels}
            ppath CURRENT DEFAULT
            default 0.3
            helpkey *
         }
      }

      action chpix {
         alias {chpi(x)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
         }

         parameter file {
            type FILENAME
            ppath CURRENT
            prompt {Text file containing NDF sections and replacement values}
            helpkey *
         }

        parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be modified}
            helpkey *
         }

         parameter mode {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode used to obtain NDF sections and values}
            default Interface
            helpkey *
         }

         parameter newval {
            position 4
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT DEFAULT
            prompt {New value for the section}
            default 0.0
            helpkey *
         }

         parameter oldval {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
        }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter section {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Section to be set to a constant}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action cmult {
         alias {cmul(t)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Multiplication constant}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action collapse {
         alias {coll(apse)}

         helplib {$KAPPA_HELP}

         parameter axis {
            position 3
            type LITERAL
            prompt {The axis to be collapsed}
            ppath DYNAMIC
            helpkey *
        }

         parameter clip {
            type _REAL
            vpath DEFAULT
            prompt {Clipping standard deviation}
            ppath CURRENT DEFAULT
            default 3.0
            helpkey *
         }

         parameter comp {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to collapse}
            default Data
            helpkey *
         }

         parameter estimator {
            position 6
            type LITERAL
            vpath DEFAULT
            prompt {Method for estimating collapsed pixel values}
            ppath CURRENT DEFAULT
            default Mean
            helpkey *
         }

         parameter high {
            position 5
            type LITERAL
            vpath DEFAULT
            prompt {Axis value at end of collapsed range}
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter low {
            position 4
            type LITERAL
            vpath DEFAULT
            prompt {Axis value at start of collapsed range}
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Output title}
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter trim {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Remove collapsed pixel and WCS axis?}
            helpkey *
            default TRUE
         }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Process the variance array?}
            helpkey *
         }

         parameter wcsatts {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {WCS attributes for input NDF}
            helpkey *
            default !
         }

         parameter wlim {
            position 7
            type _REAL
            vpath DEFAULT
            prompt {Weight limit for good output pixels}
            ppath CURRENT DEFAULT
            default 0.3
            helpkey *
         }

      }

      action compadd {
         alias {compad(d)}

         helplib {$KAPPA_HELP}

         parameter align {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default ORIGIN
            prompt {Position for a compresion box corner}
            helpkey *
         }

         parameter axweight {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Compute weighted axis centres?}
            helpkey *
         }

         parameter compress {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Compression factors}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be compressed}
            helpkey *
         }

         parameter normal {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Normalise summations for bad values?}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being compressed}
            helpkey *
         }

         parameter preserve {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Preserve input data type in output NDF?}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter trim {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Trim input NDF to a whole number of compression boxes?}
            helpkey *
         }

         parameter wlim {
            position 4
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.3
            prompt {Weight limit for good output pixels}
            helpkey *
         }

      }

      action compave {
         alias {compav(e)}

         helplib {$KAPPA_HELP}

         parameter align {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default ORIGIN
            prompt {Position for a compresion box corner}
            helpkey *
        }

         parameter axweight {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Compute weighted axis centres?}
            helpkey *
         }

         parameter compress {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Compression factors}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be compressed}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being compressed}
            helpkey *
         }

         parameter preserve {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Preserve input data type in output NDF?}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter trim {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Trim input NDF to a whole number of compression boxes?}
            helpkey *
         }

         parameter weight {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Compute weighted averages using variance?}
            helpkey *
         }

         parameter wlim {
            position 4
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.3
            prompt {Weight limit for good output pixels}
            helpkey *
         }

      }

      action compick {
         alias {compi(ck)}

         helplib {$KAPPA_HELP}

         parameter compress {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Compression factors}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be compressed}
            helpkey *
         }

         parameter origin {
            size *
            position 4
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Pixel indices of the first selected element.}
            default !
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being compressed}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action complex {
         helplib {$KAPPA_HELP}

         parameter calcmode {
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Type of calculation performed}
            default { }
            helpkey *
         }

         parameter intype {
            position 5
            type LITERAL
            vpath DYNAMIC DEFAULT
            prompt {Nature of the input NDF(s)}
            default COMPLEX
            helpkey *
         }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF data structure}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Second input NDF data structure}
            helpkey *
         }

         parameter outtype {
            position 6
            type LITERAL
            vpath DYNAMIC DEFAULT
            prompt {Nature of the output NDF(s)}
            default COMPLEX
            helpkey *
         }

         parameter out1 {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {First output NDF data structure}
            helpkey *
         }

         parameter out2 {
            position 4
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Second output NDF data structure}
            helpkey *
         }

         parameter title1 {
            type LITERAL
            vpath DEFAULT
            prompt {Title for the first output NDF}
            default !
            helpkey *
         }

         parameter title2 {
            type LITERAL
            vpath DEFAULT
            prompt {Title for the second output NDF}
            default !
            helpkey *
         }

      }

      action configecho {
         alias {config(echo)}

         helplib {$KAPPA_HELP}

         parameter application {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Application for which to find configuration}
            helpkey *
            default !
         }

         parameter config {
            position 2
            type LITERAL
            ppath CURRENT
            prompt {Configuration parameters}
            helpkey *
         }

         parameter defaults {
            position 3
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Defaults file}
            helpkey *
            default !
         }

         parameter defval {
            position 5
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Default value}
            helpkey *
            default "<***>"
         }

         parameter logfile {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store config parameters}
            default !
            helpkey *
         }

         parameter name {
            position 1
            type LITERAL
            ppath CURRENT
            prompt {Parameter name}
            helpkey *
         }

         parameter ndf {
            access READ
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {NDF from which to read configuration}
            helpkey *
            default !
         }

         parameter select {
            position 4
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Allowed parameter prefix selection}
            helpkey *
            default !
         }

         parameter sort {
            type _LOGICAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Sort displayed configuration parameters?}
            helpkey *
            default FALSE
         }

         parameter value {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }
      }

      action convolve {
         alias {conv(olve)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _INTEGER
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Indices of pixel axes spanning the convolution plane}
            helpkey *
            size *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter norm {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Normalise the output NDF to match the input NDF?}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
         }

         parameter psf {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {NDF containing the convolution function or PSF}
            helpkey *
         }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            default !
            prompt {Output title}
            helpkey *
         }

         parameter wlim {
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
         }

         parameter xcentre {
            position 4
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
         }

         parameter ycentre {
            position 5
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
         }

      }

      action copybad {
         alias {copyb(ad)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter invert {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should good reference pixels be set bad?}
            default FALSE
            helpkey *
         }

         parameter nbad {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter ngood {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter ref {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Reference NDF}
            helpkey *
         }

         parameter title {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action creframe {
         alias {cref(rame)}

         helplib {$KAPPA_HELP}

         parameter background {
            type _REAL
            ppath CURRENT DEFAULT
            prompt {Background value}
            default 0
            helpkey *
         }

         parameter badcol {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of bad columns to include}
            default 0
            helpkey *
         }

         parameter badpix {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Bad pixels to be included?}
            helpkey *
            default FALSE
         }

         parameter badrow {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of bad rows to include}
            default 0
            helpkey *
         }

         parameter dirn {
            type _INTEGER
            ppath CURRENT DEFAULT
            prompt {Direction of ramping}
            default 1
            helpkey *
         }

         parameter distrib {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Type of radial distribution (RSQ,FIX)}
            default FIX
            helpkey *
         }

         parameter fraction {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fraction of bad pixels}
            default 0.01
            helpkey *
         }

         parameter high {
            type _REAL
            ppath CURRENT DEFAULT
            prompt {Upper limit for data}
            default 1000
            helpkey *
         }

         parameter lbound {
            size *
            position 3
            type _INTEGER
            prompt {Lower bounds of the output NDF}
            ppath CURRENT DEFAULT
            default 1
            helpkey *
         }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            prompt {Template NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Name for log file}
            default !
            helpkey *
         }

         parameter low {
            type _REAL
            ppath DEFAULT
            prompt {Lower limit for data}
            default 0.0
            helpkey *
         }

         parameter max {
            type _REAL
            access READ
            ppath CURRENT
            prompt {Maximum peak intensity for Gaussians}
            helpkey *
         }

         parameter mean {
            type _REAL
            ppath CURRENT
            prompt {Mean intensity}
            helpkey *
         }

         parameter min {
            type _REAL
            access READ
            ppath CURRENT
            prompt {Minimum peak intensity for Gaussians}
            helpkey *
         }

         parameter mode {
            position 2
            type LITERAL
            prompt {Form of data to be generated}
            ppath CURRENT DEFAULT
            default GS
            helpkey *
         }

         parameter ngauss {
            type _INTEGER
            access READ
            ppath CURRENT
            prompt {Number of Gaussians}
            helpkey *
         }

         parameter out {
            position 1
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF structure}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Output positions list}
            ppath CURRENT DEFAULT
            default !
            association ->GLOBAL.CATALOGUE
            helpkey *
         }

         parameter seeing {
            type _REAL
            access READ
            ppath CURRENT
            prompt {Full-width half-maximum of Gaussians in pixels}
            helpkey *
         }

         parameter sigma {
            type _REAL
            ppath CURRENT
            prompt {Standard deviation of the noise.}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default {KAPPA - Creframe}
            helpkey *
         }

         parameter ubound {
            size *
            position 4
            type _INTEGER
            prompt {Upper bounds of the output NDF}
            ppath CURRENT DEFAULT
            default 64
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Create a VARIANCE component?}
            default !
            helpkey *
         }

      }

      action csub {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Value to be subtracted}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action cumulvec {
         alias {cum(ulvec)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF to be summed}
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Summed NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter thresh {
            position 3
            type _DOUBLE
            prompt {Maximum difference of adjacent array values}
            ppath CURRENT
            default !
            helpkey *
         }
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }
      }

      action div {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action errclip {
         alias {errc(lip)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
         }

         parameter limit {
            position 3
            type _DOUBLE
            access READ
            prompt {Limiting value}
            helpkey *
         }

         parameter mode {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            default SIGMA
            prompt {Quantity to limit}
            helpkey *
         }

      }

      action excludebad {
         alias {exclud(ebad)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter rows {
            position 3
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should bad rows be excluded?}
            default TRUE
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter wlim {
            position 4
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0
            prompt {Min. fraction of good pixels in a good row}
            helpkey *
         }
      }

      action expon {

         helplib {$KAPPA_HELP}

         parameter base {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Base}
            default Natural
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action ffclean {
         alias {ffcl(ean)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _INTEGER
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Pixel axes spanning the rows or planes to be cleaned}
            helpkey *
            size *
         }

         parameter box {
            position 4
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3 3
            prompt {Smoothing box size}
            helpkey *
            size *
         }

         parameter clip {
            position 3
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3.0 3.0 3.0
            prompt {Clipping levels}
            helpkey *
            size *
         }

         parameter genvar {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Generate output variance from local variations?}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Give image to be cleaned}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold the cleaned image}
            helpkey *
         }

         parameter sigma {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the RMS noise per pixel}
            default 0.0
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter thresh {
            size *
            position 5
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Data-value limits}
            helpkey *
         }

         parameter wlim {
            position 6
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
         }

      }

      action fillbad {
         alias {fill(bad)}

         helplib {$KAPPA_HELP}

         parameter block {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 512
            prompt {Maximum block dimension}
            helpkey *
         }

         parameter cngmax {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the maximum change}
            default 0.0
            helpkey *
         }

         parameter cngrms {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the RMS change}
            default 0.0
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Give image to be cleaned}
            helpkey *
         }

         parameter memory {
            type _LOGICAL
            prompt {Is the array to be processed in blocks?}
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter niter {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 2
            prompt {Number of iterations}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold the cleaned image}
            helpkey *
         }

         parameter size {
            size *
            position 4
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 5.0
            prompt {Initial scale length in pixels along each dimension}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Are variance values to be generated?}
            helpkey *
         }

      }

      action fitsurface {
         alias {fitsu(rface)}

         helplib {$KAPPA_HELP}

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system}
            association <->GLOBAL.COORD_SYSTEM
            default World
            helpkey *
         }

         parameter fittype {
            position 2
            type LITERAL
            vpath DEFAULT
				 # implemented
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Type of the fit}
            default Polynomial
            helpkey *
         }

         parameter knots {
            size *
            type _INTEGER
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of interior knots (1-11)}
            helpkey *
            default 4
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be fitted}
            helpkey *
         }

         parameter nxpar {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Number of fitting parameters in the x direction}
            default 4
            range 1 15
            helpkey *
         }

         parameter nypar {
            position 4
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Number of fitting parameters in the y direction}
            default 4
            range 1 15
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Weight using variance array, if available?}
            default TRUE
            helpkey *
         }

         parameter overwrite {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Overwrite any existing surface fit?}
            default TRUE
            helpkey *
         }

         parameter xmax {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Maximum X co-ordinate for fit}
            helpkey *
         }

         parameter xmin {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Minimum X co-ordinate for fit}
            helpkey *
         }

         parameter ymax {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Maximum Y co-ordinate for fit}
            helpkey *
         }

         parameter ymin {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Minimum Y co-ordinate for fit}
            helpkey *
         }

      }

      action flip {

         helplib {$KAPPA_HELP}

         parameter axis {
            type _LOGICAL
            access READ
            vpath {DEFAULT }
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Flip associated axis values?}
            helpkey *
         }

         parameter dim {
            position 3
            type _INTEGER
            access READ
            vpath {PROMPT }
            ppath CURRENT
            prompt {Dimension to reverse pixels along}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF data structure}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath {DEFAULT }
            ppath CURRENT
            default !
            prompt {Title for output NDF}
            helpkey *
         }

      }

      action fourier {
         alias {four(ier)}

         helplib {$KAPPA_HELP}

         parameter fillval {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Fill and padding value}
            helpkey *
            default 0.0
         }

         parameter hermin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Hermitian Fourier transform}
            helpkey *
         }

         parameter hermout {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Hermitian-Fourier-transform NDF}
            helpkey *
         }

         parameter hm_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output Hermitian NDF}
            default {KAPPA - Fourier - Hermitian}
            helpkey *
         }

         parameter im_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output imaginary-transform NDF}
            default {KAPPA - Fourier - Imaginary}
            helpkey *
         }

         parameter imagin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform imaginary component}
            helpkey *
            default !
         }

         parameter imagout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for imaginary part of Fourier transform}
            helpkey *
            default !
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be transformed}
            helpkey *
         }

         parameter inverse {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Inverse transformation?}
            helpkey *
            default FALSE
         }

         parameter out {
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Real NDF to be created}
            helpkey *
         }

         parameter ph_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output power NDF}
            default {KAPPA - Fourier - Phase}
            helpkey *
         }

         parameter phasein {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform phase component}
            helpkey *
            default !
         }

         parameter phaseout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for phase part of Fourier transform}
            helpkey *
            default !
         }

         parameter powerin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform power component}
            helpkey *
            default !
         }

         parameter powerout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for power part of Fourier transform}
            helpkey *
            default !
         }

         parameter pw_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output power NDF}
            default {KAPPA - Fourier - Power}
            helpkey *
         }

         parameter realin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform real component}
            helpkey *
            default !
         }

         parameter realout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for real part of Fourier transform}
            helpkey *
            default !
         }

         parameter rl_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output real-transform NDF}
            default {KAPPA - Fourier - Real}
            helpkey *
         }

         parameter shift {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Locate transform's origin at centre?}
            helpkey *
            default FALSE
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output real NDF}
            default {KAPPA - Fourier}
            helpkey *
         }

         parameter trim {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Trim output arrays if necessary?}
            helpkey *
            default FALSE
         }

      }

      action gausmooth {
         alias {gausm(ooth)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _INTEGER
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Indices of pixel axes spanning the smoothing plane}
            helpkey *
            size *
         }

         parameter box {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Smoothing box size}
            helpkey *
         }

         parameter fwhm {
            size *
            position 3
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 2.0
            prompt {Gaussian PSF full-width(s) at half-maximum}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter orient {
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Orientation of the elliptical PSF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Output title}
            helpkey *
         }

         parameter wlim {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
         }

      }

      action glitch {
         alias {glit(ch)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input image}
            helpkey *
         }

         parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <->GLOBAL.CATALOGUE
            prompt {Positions list containing bad pixel positions}
            helpkey *
         }

         parameter infile {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File containing the bad pixel positions}
            helpkey *
         }

         parameter mode {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode to obtain pixel positions}
            default Interface
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            helpkey *
         }

         parameter pixpos {
            type LITERAL
            ppath DYNAMIC
            prompt {Bad pixel position}
            helpkey *
         }

         parameter title {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Title for output image}
            default !
            helpkey *
         }

      }

      action globals {
         alias {glob(als)}

         helplib {$KAPPA_HELP}

      }

      action histat {
         alias {hista(t)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
         }

         parameter logfile {
            position 4
            type FILENAME
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {File for logging results}
            helpkey *
         }

         parameter maxcoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter maximum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter maxpos {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter maxwcs {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter median {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter method {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for estimating the mode}
            default Pearson
            helpkey *
         }

         parameter mincoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter minimum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter minpos {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter minwcs {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter mode {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to analyse}
            helpkey *
         }

         parameter numbad {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter numbin {
            type _INTEGER
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Number of histogram bins to compute mode}
            helpkey *
         }

         parameter numgood {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter numpix {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter percentiles {
            size *
            position 3
            type _REAL
            vpath DEFAULT
            prompt {List of percentiles}
            default !
            helpkey *
         }

         parameter perval {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            helpkey *
         }

         parameter total {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

      }

      action histeq {
         alias {histe(q)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be transformed}
            helpkey *
         }

         parameter numbin {
            position 3
            type _INTEGER
            vpath DEFAULT
            default 2048
            prompt {Number of histogram bins}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after transformation}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action histogram {
         alias {histo(gram)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
         }

         parameter comp {
            position 4
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
         }

         parameter cumul {
            type _LOGICAL
            vpath DEFAULT
            prompt {Produce a cumulative histogram?}
            helpkey *
            default FALSE
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to analyse}
            helpkey *
         }

         parameter logfile {
            position 5
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {File for logging results}
            helpkey *
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter numbin {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            default 20
            prompt {Number of histogram bins}
            helpkey *
         }

         parameter out {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath CURRENT
            prompt {NDF in which to store histogram}
            helpkey *
            default !
         }

         parameter range {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default !
            prompt {Range of values in the histogram}
            helpkey *
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT
            prompt {Title for histogram NDF}
            default {KAPPA - Histogram}
            helpkey *
         }

         parameter weights {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {NDF holding weights}
            default !
            helpkey *
         }

         parameter weightstep {
            type _DOUBLE
            prompt {Weight corresponding to a single histogram count}
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 1.0
            helpkey *
         }

         parameter width {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            default !
            prompt {Width of histogram bins}
            helpkey *
         }

         parameter xleft {
            type _DOUBLE
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter xlog {
            type _LOGICAL
            prompt {Is the abscissa to be plotted logarithmically?}
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter xright {
            type _DOUBLE
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ybot {
            type _DOUBLE
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ylog {
            type _LOGICAL
            prompt {Is the ordinate to be plotted logarithmically?}
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter ytop {
            type _DOUBLE
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

      }

      action interleave {
         alias {inte(rleave)}

         helplib {$KAPPA_HELP}

         parameter expand {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Expansion factors}
            helpkey *
         }

         parameter fill {
            type LITERAL
            prompt {Filling value of the output array}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Bad
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {NDFs to be interleaved}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            ppath CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being expanded}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter trim {
            type _LOGICAL
            prompt {Trim or pad the input NDFs before interleaving?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }
      }

iraf! {

      action kaphelp {
         alias {kaph(elp)}

         helplib {$KAPPA_HELP}

         parameter topic {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help topic}
            default {        }
            helpkey *
         }

         parameter subtopic {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subtopic}
            default {        }
            helpkey *
         }

         parameter subsubtopic {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subsubtopic}
            default {        }
            helpkey *
         }

         parameter subsubsubtopic {
            position 4
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subsubsubtopic}
            default {        }
            helpkey *
         }

      }
}

      action kstest {
         alias {kste(st)}

         helplib {$KAPPA_HELP}

         parameter comp {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
         }

         parameter dist {
            size *
				 # distributions.
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0
            helpkey *
         }

         parameter errmean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter files {
            size *
            type _CHAR
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
         }

         parameter in {
            position 1
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Name of the input files containing data to be compared}
            helpkey *
         }

         parameter limit {
            position 3
            type _REAL
            vpath DEFAULT
            ppath CURRENT
            prompt {Confidence level at which subsamples are rejected}
            default 0.05
            helpkey *
         }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter nkept {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter nsample {
            type _INTEGER
            vpath DYNAMIC
            ppath CURRENT
            prompt {Number of subsamples}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            default !
            association ->GLOBAL.DATA_ARRAY
            prompt {Name of file to contain consistent output data}
            helpkey *
         }

         parameter prob {
            size *
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0
            helpkey *
         }

         parameter sigma {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

      }

      action laplace {
         alias {lapl(ace)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter number {
            type _INTEGER
            vpath DEFAULT
            prompt {Number of Laplacians to remove}
            ppath CURRENT DEFAULT
            default 1
            helpkey *
         }
         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Output title}
            default !
            helpkey *
         }
      }

      action logar {
         alias {loga(r)}

         helplib {$KAPPA_HELP}

         parameter base {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Base}
            default Natural
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action look {

         helplib {$KAPPA_HELP}

         parameter again {
            type _LOGICAL
            prompt {List another region?}
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            helpkey *
         }

         parameter arddesc {
            type LITERAL
            ppath CURRENT
            prompt {ARD description for region to be listed}
            helpkey *
         }

         parameter ardfile {
            type FILENAME
            access READ
            ppath GLOBAL CURRENT
            prompt {ARD file for region to be listed}
            association <->GLOBAL.ARDFILE
            helpkey *
         }

         parameter centre {
            position 2
            type LITERAL
            prompt {Position at the centre of the listing}
            ppath DYNAMIC
            helpkey *
         }

         parameter comp {
            position 6
            type LITERAL
            vpath DEFAULT
            prompt {Component to list}
            ppath CURRENT DEFAULT
            default Data
            helpkey *
         }

         parameter format {
            position 5
            type LITERAL
            vpath DEFAULT
            prompt {Format for listing}
            ppath CURRENT DEFAULT
            default Strips
            helpkey *
         }

         parameter lbound {
            size *
            type LITERAL
            prompt {Position at the bottom left corner of the listing}
            ppath DYNAMIC CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter logfile {
            position 4
            type FILENAME
            access READ
            vpath DEFAULT
            prompt {File to store listing in}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter maxlen {
            type _INTEGER
            access READ
            vpath DEFAULT
            prompt {The line length for the listing}
            ppath CURRENT DEFAULT
            default 80
            helpkey *
         }

         parameter mode {
            position 7
            type LITERAL
            vpath DEFAULT
            prompt {Method for specifying the region}
            ppath CURRENT DEFAULT
            default Centre
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF to examine}
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter size {
            position 3
            type _INTEGER
            access READ
            vpath DEFAULT
            prompt {The dimensions (in pixels) of the area to be listed}
            ppath CURRENT DEFAULT
            default 7
            helpkey *
         }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Formatting style for data values}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter ubound {
            size *
            type LITERAL
            prompt {Position at the top right corner of the listing}
            ppath DYNAMIC CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {The axes to be annotated}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter value {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

      }

      action lucy {

         helplib {$KAPPA_HELP}

         parameter aim {
            position 4
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            prompt {Target normalised chi-squared}
            helpkey *
         }

         parameter back {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding the background data}
            helpkey *
         }

         parameter backval {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0
            prompt {Constant-background data value}
            helpkey *
         }

         parameter chifac {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            prompt {Target normalised chi-squared}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter niter {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 50
            prompt {Maximum number of iterations to perform}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
         }

         parameter psf {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {An NDF holding the PSF}
            helpkey *
         }

         parameter sigma {
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Standard deviation of the noise}
            helpkey *
         }

         parameter snyder {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use the Snyder modification?}
            helpkey *
         }

         parameter start {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding a guess at the restored image}
            helpkey *
         }

         parameter thresh {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0625
            prompt {Truncation fractional threshold of PSF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Use variances stored in the input NDF?}
            helpkey *
         }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.001
            prompt {Weight limit for good output pixels}
            helpkey *
         }

         parameter xcentre {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
         }

         parameter ycentre {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
         }

      }

      action manic {
         alias {mani(c)}
         helplib {$KAPPA_HELP}

         parameter axes {
            position 3
            type _INTEGER
            access READ
            vpath PROMPT
            prompt {Input axis for each output axis}
            size *
            helpkey *
        }

         parameter estimator {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Mean
            prompt {Statistic for estimating pixel values from collapsed axes}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
        }

         parameter lbound {
            size *
            type _INTEGER
            access READ
            vpath PROMPT
            prompt {Lower bounds for new expanded axes}
            ppath DYNAMIC
            size *
            helpkey *
        }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
        }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath CURRENT
            default !
            helpkey *
        }

         parameter ubound {
            size *
            type _INTEGER
            access READ
            vpath PROMPT
            prompt {Upper bounds for new expanded axes}
            ppath DYNAMIC
            size *
            helpkey *
        }
      }

      action makesnr {
         alias {makesn(r)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter minvar {
            position 3
            type _DOUBLE
            access READ
            ppath DYNAMIC
            vpath DYNAMIC
            prompt {Minimum usable Variance value}
            helpkey *
         }
      }

      action makesurface {
         alias {makes(urface)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF containing coefficients}
            helpkey *
         }

         parameter lbound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Lower bounds of the output NDF}
            helpkey *
            default 1 1
            size *
         }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath GLOBAL DEFAULT
            association <-GLOBAL.DATA_ARRAY
            prompt {Template NDF (null for none)}
            helpkey *
            default !
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to contain surface}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Title for the new NDF}
            helpkey *
            default !
         }

         parameter type {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Data type of output NDF}
            helpkey *
            default _DOUBLE
         }

         parameter ubound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Upper bounds of the output NDF}
            helpkey *
            default 512 512
            size *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Create a variance error?}
            helpkey *
            default FALSE
         }

         parameter xlimit {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {X co-ordinate limits (lower then upper)}
            helpkey *
         }

         parameter ylimit {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {Y co-ordinate limits (lower then upper)}
            helpkey *
         }

      }

      action maths {
         alias {math(s)}

         helplib {$KAPPA_HELP}

         parameter exp {
            position 1
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Expression}
            helpkey *
         }

         parameter fa {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fb {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fc {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fd {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fe {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter ff {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fg {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fh {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fi {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fj {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fk {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fl {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fm {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fn {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fo {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fp {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fq {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fr {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fs {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter ft {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fu {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fv {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fw {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fx {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fy {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }

         parameter fz {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
         }
         parameter ia {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ib {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ic {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter id {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ie {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter if {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ig {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ih {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ii {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ij {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ik {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter il {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter im {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter in {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter io {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ip {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter iq {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ir {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter is {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter it {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter iu {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter iv {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter iw {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter ix {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter iy {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter iz {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
         }

         parameter lbound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Lower bounds of the output NDF}
            helpkey *
         }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath GLOBAL DEFAULT
            association <-GLOBAL.DATA_ARRAY
            prompt {Template NDF (null for none)}
            helpkey *
            default !
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey MATHS Parameters OUT
         }

         parameter pa {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pb {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pc {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pd {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pe {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pf {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pg {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter ph {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pi {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pj {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pk {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pl {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pm {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pn {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter po {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pp {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pq {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pr {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter ps {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pt {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pu {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pv {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pw {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter px {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter py {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter pz {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
         }

         parameter quick {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Calculate output variance by quick method?}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter type {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Data type of output NDF}
            helpkey *
            default _REAL
         }

         parameter ubound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Upper bounds of the output NDF}
            helpkey *
         }

         parameter units {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Propagate NDF units to output?}
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Calculate output variance?}
            helpkey *
         }

         parameter va {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vb {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vc {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vd {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter ve {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vf {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vg {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vh {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vi {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vj {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vk {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vl {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vm {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vn {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vo {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vp {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vq {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vr {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vs {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vt {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vu {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vv {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vw {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vx {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vy {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

         parameter vz {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
         }

      }

      action median {
         alias {medi(an)}

         helplib {$KAPPA_HELP}

         parameter bound {
            position 5
            type LITERAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Reflect or Replicate at image edge}
            helpkey *
            default Replicate
         }

         parameter centre {
            position 8
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Centre value for weighting function}
            helpkey *
            default 3
         }

         parameter corner {
            position 7
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Corner value for weighting function}
            helpkey *
            default 1
         }

         parameter diff {
            position 4
            type _DOUBLE
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Threshold for replacement by median.}
            default 0.0
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image for filtering with weighted median filter}
            helpkey *
         }

         parameter iterate {
            type LITERAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Specified or Continuous iteration}
            helpkey *
            default Specified
         }

         parameter maxit {
            type _INTEGER
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Number of iterations before damping}
            helpkey *
            default 10
         }

         parameter medthr {
            type _REAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Fractional threshold for sorted actual median position}
            default 0.8
            helpkey *
         }

         parameter mode {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Type of WMF to use, reply -1 -> 7}
            helpkey *
            default 0
         }

         parameter numit {
            position 6
            type _INTEGER
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Number of iterations of filter}
            helpkey *
            default 1
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold filtered data}
            helpkey *
         }

         parameter side {
            position 9
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Side value for weighting function}
            helpkey *
            default 1
         }

         parameter step {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC
            prompt {Stepsize(s) for weighting function}
            helpkey *
            default 1
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {Output title}
            helpkey *
         }

      }

      action mfittrend {
         alias {mfitt(rend)}

         helplib {$KAPPA_HELP}

         parameter aranges {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter auto {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Automatic selection of fitting ranges?}
            default FALSE
            helpkey *
         }

         parameter axis {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3
            prompt {Axis of trends}
            helpkey *
         }

         parameter clip {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clipping standard deviations to reject outliers for automatic ranges}
            helpkey *
            default 2 2 2.5 3
            size *
         }

         parameter fittype {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Type of the fit}
            default Polynomial
            helpkey *
         }

         parameter forest {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Does the data contain any lineforests?}
            default FALSE
            helpkey *
         }

         parameter hnumbin {
            type _INTEGER
            vpath DYNAMIC NOPROMPT
            ppath CURRENT DEFAULT
            default 100
            prompt {Number of bins for histogram to determine the mode}
            helpkey *
         }

         parameter knots {
            type _INTEGER
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of interior knots (1-11)}
            helpkey *
            default 4
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter interpol {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Use a interpolation spline?}
            default FALSE
            helpkey *
         }

         parameter mask {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            prompt {NDF for the feature mask}
            helpkey *
            default !
         }

         parameter method {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Single
            prompt {Method to define masked regions in automatic mode}
            helpkey *
         }

         parameter modifyin {
            type _LOGICAL
            prompt {Modify the input NDF}
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter numbin {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 32
            prompt {Number of bins for automatic feature rejection}
            helpkey *
         }

         parameter order {
            position 5
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3
            prompt {Order of polynomials}
            helpkey *
         }

         parameter out {
            position 4
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter posknot {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Co-ordinates of knots}
            helpkey *
            size *
         }

         parameter propbad {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Propagate bad input values to the returned fit?}
            default TRUE
            helpkey *
         }

         parameter ranges {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default !
            prompt {Co-ordinate ranges (pairs)}
            helpkey *
            size *
         }

         parameter rmsclip {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clipping standard deviation to reject fit r.m.s. outliers}
            helpkey *
            default !
         }

         parameter section {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Section to be averaged to determine fitting ranges}
            default !
            helpkey *
         }

         parameter subtract {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Subtract trends}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Use variances as weights}
            helpkey *
         }

      }

      action mocgen {
         alias {mocg(en)}

         helplib {$KAPPA_HELP}

         parameter comp {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Component to analyse}
            helpkey *
            default Data
        }

         parameter format {
            type LITERAL
            vpath DEFAULT
            prompt {Format for output MOC}
            ppath CURRENT DEFAULT
            default FITS
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter maxres {
            type _REAL
            vpath DEFAULT
            prompt {Max resolution in MOC (arc-seconds)}
            ppath CURRENT DEFAULT
            default !
            helpkey *
        }

         parameter minres {
            type _REAL
            vpath DEFAULT
            prompt {Min resolution in MOC (arc-seconds)}
            ppath CURRENT DEFAULT
            default !
            helpkey *
        }

         parameter mode {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode used to determine MOC}
            default Good
            helpkey *
         }

         parameter out {
            position 2
            type LITERAL
            vpath PROMPT
            prompt {Name of the output file}
            helpkey *
        }

         parameter qexp {
            type LITERAL
            access READ
            ppath GLOBAL DEFAULT
            default ANY
            association <->GLOBAL.QUALITY_EXP
            prompt {Quality expression}
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The current Frame axes to be used}
            helpkey *
         }

      }

      action mstats {
         alias {msta(ts)}

         helplib {$KAPPA_HELP}

         parameter clip {
            type _REAL
            vpath DEFAULT
            prompt {Clipping standard deviation}
            ppath CURRENT DEFAULT
            default 3.0
            helpkey *
        }

         parameter comp {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Component to analyse}
            helpkey *
            default Data
        }

         parameter estimator {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Method for estimating collapsed pixel values}
            ppath CURRENT DEFAULT
            default Mean
            helpkey *
        }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF}
            ppath CURRENT
            helpkey *
        }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0D0
         }

         parameter median {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0D0
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            ppath CURRENT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
        }

         parameter pos {
            type LITERAL
            prompt {Position at which to calculate statistics}
            vpath PROMPT
            ppath CURRENT
            helpkey *
        }

         parameter single {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Statistics at a single point?}
            helpkey *
        }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath DEFAULT
            default {KAPPA - MSTATS}
            helpkey *
        }

         parameter trim {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Trim output NDF to common overlap?}
            helpkey *
        }

         parameter var {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0D0
        }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Process the variance array?}
            helpkey *
        }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            prompt {Weight limit for good output pixels}
            ppath CURRENT DEFAULT
            default 0.3
            helpkey *
        }
      }

      action mult {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action noglobals {
         alias {nogl(obals)}

         helplib {$KAPPA_HELP}

      }

      action nomagic {
         alias {noma(gic)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component(s) to process}
            helpkey *
            default Data
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF from which magic values are to be removed}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF without magic values}
            helpkey *
         }

         parameter repval {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {The value to replace the magic value}
            helpkey *
         }

         parameter sigma {
            position 4
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {The standard deviation of the replacement values}
            default !
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action normalize {
         alias {norm(alize)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should graphics workstation be cleared?}
            default TRUE
            helpkey *
         }

         parameter corr {
            type _REAL
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
         }

         parameter datarange {
            size *
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Data range}
            helpkey *
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter drawmark {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Draw a central marker for each bin?}
            default TRUE
            helpkey *
         }

         parameter drawwidth {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Draw a width bar for each bin?}
            default TRUE
            helpkey *
         }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be normalised}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {The NDF to define the normalization}
            helpkey *
         }

         parameter loop {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Loop over each row or column of IN1?}
            helpkey *
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
         }

         parameter minpix {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 2
            prompt {Minimum number of good pixels in a bin}
            helpkey *
         }

         parameter nbin {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of bins in the fit}
            default 50
            helpkey *
         }

         parameter niter {
            type _INTEGER
            vpath DYNAMIC
            prompt {Number of rejection iterations}
            helpkey *
         }

         parameter nsigma {
            type _REAL
            vpath DYNAMIC
            prompt {Number of standard deviations to reject data at}
            helpkey *
         }

         parameter offset {
            type _REAL
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
         }

         parameter outcorr {
            type NDF
            access WRITE
            ppath CURRENT,DEFAULT
            vpath DEFAULT
            default !
            prompt {NDF to hold correlation coeff. for each row/column}
            helpkey *
         }

         parameter outoffset {
            type NDF
            access WRITE
            ppath CURRENT,DEFAULT
            vpath DEFAULT
            default !
            prompt {NDF to hold offset for each row/column}
            helpkey *
         }

         parameter outslope {
            type NDF
            access WRITE
            ppath CURRENT,DEFAULT
            vpath DEFAULT
            default !
            prompt {NDF to hold slope for each row/column}
            helpkey *
         }

         parameter pcrange {
            size *
            type _REAL
            vpath DYNAMIC
            prompt {Percentage range for auto-scaling}
            helpkey *
         }

         parameter slope {
            type _REAL
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {A title for the output NDF}
            helpkey *
         }

         parameter xleft {
            type _DOUBLE
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter xright {
            type _DOUBLE
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ybot {
            type _DOUBLE
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ytop {
            type _DOUBLE
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter zeroff {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should the fit offset be forced to zero?}
            default FALSE
            helpkey *
         }

      }

      action numb {

         helplib {$KAPPA_HELP}

         parameter abs {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Test absolute array values?}
            helpkey *
            default FALSE
         }

         parameter above {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Count above threshold?}
            helpkey *
            default TRUE
         }

         parameter comp {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to process}
            helpkey *
            default Data
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Input image}
            helpkey *
         }

         parameter number {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter value {
            position 2
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Test value}
            helpkey *
         }

      }

      action oddeven {
         alias {od(deven)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF to be smoothed}
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Smoothed NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter thresh {
            position 3
            type _DOUBLE
            prompt {Maximum difference of adjacent array values}
            ppath CURRENT
            default !
            helpkey *
         }
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }
      }

      action outset {
         alias {outs(et)}

         helplib {$KAPPA_HELP}

         parameter centre {
            position 3
            type LITERAL
            prompt {Centre of circular aperture}
            ppath CURRENT
            helpkey *
         }
         parameter comp {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            prompt {NDF array component to mask}
            ppath CURRENT DEFAULT
            default DATA
            helpkey *
         }
         parameter const {
            type LITERAL
            vpath DEFAULT
            prompt {New value for masked pixels}
            ppath CURRENT DEFAULT
            default BAD
            helpkey *
         }
         parameter diam {
            position 4
            type LITERAL
            prompt {Diameter of circular aperture}
            ppath CURRENT
            helpkey *
         }
         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF to be masked}
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter inside {
            type _LOGICAL
            vpath DEFAULT
            prompt {Mask the inside of the ARD region?}
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }
         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Masked NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }
         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The current Frame axes to be used}
            helpkey *
         }
      }

      action parget {
         alias {parg(et)}

         helplib {$KAPPA_HELP}

         parameter applic {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Task name}
            helpkey *
         }

         parameter parname {
            position 1
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Parameter name}
            helpkey *
         }

         parameter object {
            type UNIV
            access READ
            vpath CURRENT
            ppath CURRENT
            prompt {Object whose value to return}
            helpkey *
        }

         parameter vector {
            type _LOGICAL
            vpath DEFAULT
            prompt {Display vector as comma-separated list in square brackets?}
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }
      }

      action paste {
         alias {past(e)}

         helplib {$KAPPA_HELP}

         parameter confine {
				 # principal input NDF?
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Bounds of output NDF confined to principal input NDF?}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Base NDF structure}
            helpkey *
         }

         parameter p1 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
         }

         parameter p2 {
            position 3
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p3 {
            position 4
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p4 {
            position 5
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p5 {
            position 6
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p6 {
            position 7
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p7 {
            position 8
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p8 {
            position 9
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p9 {
            position 10
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p10 {
            position 11
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p11 {
            position 12
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p12 {
            position 13
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p13 {
            position 14
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p14 {
            position 15
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p15 {
            position 16
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p16 {
            position 17
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p17 {
            position 18
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p18 {
            position 19
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p19 {
            position 20
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p20 {
            position 21
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p21 {
            position 22
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p22 {
            position 23
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p23 {
            position 24
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p24 {
            position 25
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter p25 {
            position 26
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
         }

         parameter out {
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey *
         }

         parameter shift {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Incremental shift of pixel origin between input NDFs}
            default !
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter transp {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Are pasted bad values transparent?}
            helpkey *
         }

      }

      action permaxes {
         alias {perm(axes)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            prompt {Input NDF data structure}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            prompt {Output NDF data structure}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter perm {
            position 3
            type _INTEGER
            access READ
            vpath PROMPT
            prompt {Input axis for each output axis}
            helpkey *
         }
         parameter title {
            type LITERAL
            vpath {DEFAULT }
            prompt {Title for output NDF}
            ppath CURRENT
            default !
            helpkey *
         }
      }

      action pixbin {
         alias {pixb(in)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be binned}
            helpkey *
         }

         parameter index {
            position 3
            type NDF
            access READ
            prompt {A group of index NDFs}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter wcs {
            position 4
            type NDF
            access READ
            ppath CURRENT DEFAULT
            vpath DEFAULT
            default !
            prompt {A group of wcs NDFs}
            helpkey *
         }

      }

      action pixdupe {
         alias {pixd(upe)}

         helplib {$KAPPA_HELP}

         parameter expand {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Expansion factors}
            helpkey *
         }

         parameter imask {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Indices of good pixel in mask}
            default !
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be expanded}
            helpkey *
         }

         parameter mask {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mask NDF}
            default !
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being expanded}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action pluck {
         alias {plu(ck)}

         helplib {$KAPPA_HELP}

         parameter axes {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default !
            prompt {Indices of WCS axes to be retained in the output NDF}
            helpkey *
            size *
         }

         parameter coin {
            type FILENAME
            ppath CURRENT
            prompt {Text file containing initial positions}
            helpkey *
         }

         parameter container {
            type _LOGICAL
            prompt {Store the NDF slices in a single HDS container file?}
            vpath DEFAULT
            ppath CURRENT,DEFAULT
            default FALSE
            helpkey *
         }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
        }

         parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Catalogue containing fixed co-ordinates}
            helpkey *
         }

         parameter mode {
            position 5
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode used to obtain positions of slices}
            default Interface
            helpkey *
         }

         parameter method {
            position 4
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Re-sampling method}
            helpkey *
            default {SincSinc}
        }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
        }

         parameter params {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Auxiliary resampling parameters}
            helpkey *
        }

         parameter pos {
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Position of slice}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter tol {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.05
            prompt {Tolerance for linear transformation approximation}
            helpkey *
        }

      }


      action pow {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF data structure}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter power {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            prompt {Power to be used}
            ppath CURRENT
            helpkey *
         }
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }
      }

      action psf {

         helplib {$KAPPA_HELP}

         parameter amp1 {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the amplitude of the first star}
            default 0.0
            helpkey *
         }

         parameter axes {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
         }

         parameter axisr {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the axis ratio of the star images}
            default 0.0
            helpkey *
         }

         parameter centre {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the first PSF position}
            default { }
            helpkey *
         }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
         }

         parameter cofile {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File of x-y positions}
            helpkey *
         }

         parameter cut {
            position 5
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT DYNAMIC
            prompt {Output PSF threshold}
            default !
            helpkey *
         }

         parameter device {
            ptype DEVICE
            position 3
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            default !
            prompt {Name of graphics device}
            helpkey *
         }

         parameter fwhm {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the FWHM of the star images}
            default 0.0
            helpkey *
         }

         parameter gamma {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the fall-off parameter of the star images}
            default 0.0
            helpkey *
         }

         parameter gauss {
            type _LOGICAL
            vpath DEFAULT
            prompt {Fit a two-dimensional Gaussian?}
            helpkey *
            default FALSE
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF containing star images}
            helpkey *
         }

         parameter incat {
            position 2
            type FILENAME
            ppath GLOBAL CURRENT
            association <->GLOBAL.CATALOGUE
            prompt {Positions list containing star positions}
            helpkey *
         }

         parameter isize {
            position 7
            type _INTEGER
            ppath DYNAMIC
            vpath CURRENT DYNAMIC
            prompt {Side length of square for forming marginal profiles}
            helpkey *
         }

         parameter logfile {
            type FILENAME
            vpath DEFAULT
            ppath DEFAULT
            prompt {Log file for results}
            default !
            helpkey *
         }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
         }

         parameter minor {
            type _LOGICAL
            prompt {Plot profile along minor axis?}
            vpath DEFAULT
            default TRUE
            helpkey *
         }

         parameter norm {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should the PSF be normalized to a peak value of unity?}
            helpkey *
            default TRUE
         }

         parameter orient {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the orientation of the star images}
            default 0.0
            helpkey *
         }

         parameter out {
            position 4
            type NDF
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to contain the PSF}
            default !
            helpkey *
         }

         parameter poscols {
            position 8
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Star co-ordinate columns}
            helpkey *
            default !
         }

         parameter profout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {NDF to contain the fitted profile}
            default !
            helpkey *
         }

         parameter range {
            position 6
            type _REAL
            ppath DYNAMIC
            vpath CURRENT DYNAMIC
            prompt {Number of star-profile widths for profile fitting}
            helpkey *
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
         }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            default {KAPPA - PSF}
            prompt {Title for output NDF}
            helpkey *
         }

         parameter total {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the total flux of the fitted profile}
            default 0.0
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The current Frame axes to be used}
            helpkey *
         }

         parameter xcen {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the first star x position}
            default { }
            helpkey *
         }

         parameter xleft {
            type _DOUBLE
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter xright {
            type _DOUBLE
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ybot {
            type _DOUBLE
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

         parameter ycen {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the first star y position}
            default { }
            helpkey *
         }

         parameter ytop {
            type _DOUBLE
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
         }

      }

      action regionmask {
         alias {ardm(ask)}

         helplib {$KAPPA_HELP}

         parameter region {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            prompt {Text file holding Region}
            ppath CURRENT DEFAULT
            helpkey *
         }

         parameter const {
            type LITERAL
            vpath DEFAULT
            prompt {New value for masked pixels}
            ppath CURRENT DEFAULT
            default BAD
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF to be masked}
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }

         parameter inside {
            type _LOGICAL
            vpath DEFAULT
            prompt {Mask the inside of the region?}
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Masked NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
      }

      action regrid {
         alias {regr(id)}

         helplib {$KAPPA_HELP}

         parameter axes {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {The pixel axes to be regridded}
            helpkey *
         }

         parameter conserve {
            type _LOGICAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Conserve flux?}
            helpkey *
         }

          parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter lbound {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Lower bounds of the output NDF}
            helpkey *
         }

         parameter mapping {
            type FILENAME
            ppath CURRENT DEFAULT
            prompt {A file containing the Mapping, or null}
            default !
            helpkey *
         }

         parameter method {
            position 3
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Re-sampling method}
            helpkey *
            default {Nearest}
         }

         parameter norm {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Normalise output values?}
            helpkey *
            default TRUE
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter params {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Auxiliary resampling parameters}
            helpkey *
         }

         parameter rebin {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Create output pixel values by rebinning input pixels?}
            helpkey *
            default FALSE
         }

        parameter scale {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Additional scaling factors}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default {KAPPA - Regrid}
            prompt {Output NDF title}
            helpkey *
         }

         parameter tol {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.05
            prompt {Tolerance for linear transformation approximation}
            helpkey *
         }

         parameter ubound {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Upper bounds of the output NDF}
            helpkey *
         }

         parameter wlim {
            type _REAL
            prompt {Minimum weight for valid output pixels}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

      }

      action rift {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Value to be added}
            helpkey *
         }

         parameter section {
            position 4
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Section to which to add a constant}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action rotate {
         alias {rota(te)}

         helplib {$KAPPA_HELP}

         parameter angle {
            position 3
            type _REAL
            vpath PROMPT
            ppath CURRENT
            prompt {Number of degrees clockwise rotation, or null}
            helpkey *
         }

         parameter angleused {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter axes {
            type _INTEGER
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Indices of pixel axes spanning the rotation plane}
            helpkey *
            size *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be rotated}
            helpkey *
         }

         parameter nnmeth {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Do you want to use the nearest-neighbour method?}
            default FALSE
            helpkey *
         }

         parameter out {
            position 2
            access UPDATE
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Rotated NDF}
            helpkey *
         }

         parameter quality {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Propagate QUALITY (using nearest-neighbour method)?}
            default FALSE
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }
         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {The axes defining north and east}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }
         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Use variance in the weighting?}
            default FALSE
            helpkey *
         }

      }

      action segment {
         alias {segm(ent)}

         helplib {$KAPPA_HELP}

         parameter coords {
            type LITERAL
            access READ
            prompt {Co-ordinates of next polygon vertex}
            helpkey *
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF holding data to be put inside the polygon}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath DEFAULT
            prompt {NDF holding data to be put outside the polygon}
            default !
            helpkey *
         }

         parameter incat1 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 1}
            ppath GLOBAL CURRENT
            association <->GLOBAL.CATALOGUE
            helpkey *
         }

         parameter incat2 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 2}
            ppath CURRENT
            helpkey *
         }

         parameter incat3 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 3}
            ppath CURRENT
            helpkey *
         }

         parameter incat4 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 4}
            ppath CURRENT
            helpkey *
         }

         parameter incat5 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 5}
            ppath CURRENT
            helpkey *
         }

         parameter incat6 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 6}
            ppath CURRENT
            helpkey *
         }

         parameter incat7 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 7}
            ppath CURRENT
            helpkey *
         }

         parameter incat8 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 8}
            ppath CURRENT
            helpkey *
         }

         parameter incat9 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 9}
            ppath CURRENT
            helpkey *
         }

         parameter incat10 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 10}
            ppath CURRENT
            helpkey *
         }

         parameter incat11 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 11}
            ppath CURRENT
            helpkey *
         }

         parameter incat12 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 12}
            ppath CURRENT
            helpkey *
         }

         parameter incat13 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 13}
            ppath CURRENT
            helpkey *
         }

         parameter incat14 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 14}
            ppath CURRENT
            helpkey *
         }

         parameter incat15 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 15}
            ppath CURRENT
            helpkey *
         }

         parameter incat16 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 16}
            ppath CURRENT
            helpkey *
         }

         parameter incat17 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 17}
            ppath CURRENT
            helpkey *
         }

         parameter incat18 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 18}
            ppath CURRENT
            helpkey *
         }

         parameter incat19 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 19}
            ppath CURRENT
            helpkey *
         }

         parameter incat20 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 20}
            ppath CURRENT
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {File to store co-ordinates of polygon vertices}
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            prompt {The PGPLOT type for vertex markers}
            ppath CURRENT DEFAULT
            default 2
            helpkey *
         }

         parameter maxpoly {
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            prompt {Maximum number of polygons}
            default !
            helpkey *
         }

         parameter minpoly {
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            prompt {Minimum number of polygons}
            default 1
            helpkey *
         }

         parameter mode {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Mode used to obtain polygon vertices}
            ppath CURRENT DEFAULT
            default Interface
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter plot {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default POLY
            prompt {What sort of graphics should be used?}
            helpkey *
         }

         parameter poly1 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 1}
            helpkey *
         }

         parameter poly2 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 2}
            helpkey *
         }

         parameter poly3 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 3}
            helpkey *
         }

         parameter poly4 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 4}
            helpkey *
         }

         parameter poly5 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 5}
            helpkey *
         }

         parameter poly6 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 6}
            helpkey *
         }

         parameter poly7 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 7}
            helpkey *
         }

         parameter poly8 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 8}
            helpkey *
         }

         parameter poly9 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 9}
            helpkey *
         }

         parameter poly10 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 10}
            helpkey *
         }

         parameter poly11 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 11}
            helpkey *
         }

         parameter poly12 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 12}
            helpkey *
         }

         parameter poly13 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 13}
            helpkey *
         }

         parameter poly14 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 14}
            helpkey *
         }

         parameter poly15 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 15}
            helpkey *
         }

         parameter poly16 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 16}
            helpkey *
         }

         parameter poly17 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 17}
            helpkey *
         }

         parameter poly18 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 18}
            helpkey *
         }

         parameter poly19 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 19}
            helpkey *
         }

         parameter poly20 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 20}
            helpkey *
         }

         parameter quality {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Should quality values be copied to the output NDF?}
            helpkey *
         }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Style for graphics}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Should variance values be copied to the output NDF?}
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {Two axes to span the plane of the supplied polygons}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

      }

      action setmagic {
         alias {setma(gic)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component(s) to process}
            helpkey *
            default Data
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF in which values are to be flagged bad}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF containing flagged values}
            helpkey *
         }

         parameter repval {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {The value to be replaced by the bad flag}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action shadow {
         alias {shad(ow)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be enhanced}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being enhanced}
            helpkey *
         }

         parameter shift {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            prompt {Shift in x-y indices}
            helpkey *
            default 1 1
            size *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action slide {
         alias {slid(e) shif(t)}

         helplib {$KAPPA_HELP}

         parameter abs {
            position 3
            size *
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Absolute translation vector}
            helpkey *
        }

         parameter fid {
            size *
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Co-ordinates of fiducial point}
            helpkey *
        }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
        }

         parameter method {
            position 4
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Interpolation method}
            default LINEAR
            helpkey *
        }

         parameter obj {
            size *
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Co-ordinates of standard object}
            helpkey *
        }

         parameter params {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Auxiliary resampling parameters}
            helpkey *
        }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            ppath GLOBAL
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
        }

         parameter stype {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Shift type}
            default Absolute
            helpkey *
        }

         parameter title {
            type LITERAL
            access READ
            prompt {Title for output NDF}
            vpath DEFAULT
            ppath DEFAULT
            default !
            helpkey *
        }

      }

      action sqorst {
         alias {sqor(st)}

         helplib {$KAPPA_HELP}

         parameter axis {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Index of axis to squash or stretch}
            helpkey *
        }

         parameter centre {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Position about which to zoom the WCS coordinates}
            helpkey *
            default CENTRE
        }

         parameter conserve {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Conserve flux whilst resampling?}
            helpkey *
            default FALSE
         }

         parameter factors {
            size *
            position 3
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Expansion factors for each axis}
            helpkey *
        }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
        }

         parameter lbound {
            size *
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DEFAULT
            default !
            prompt {Lower pixel index bounds for output NDF}
            helpkey *
        }

         parameter method {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Re-sampling method}
            helpkey *
            default {Auto}
        }

         parameter mode {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method of specifying output NDF shape}
            helpkey *
            default Factors
        }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
        }

         parameter params {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Auxiliary resampling parameters}
            helpkey *
        }

         parameter pixscale {
            type LITERAL
            access READ
            prompt {Pixel scale for each WCS axis}
            ppath DYNAMIC
            helpkey *
        }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Title for output NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
        }

         parameter ubound {
            size *
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DEFAULT
            default !
            prompt {Upper pixel index bounds for output NDF}
            helpkey *
        }

      }

      action stats {

         helplib {$KAPPA_HELP}

         parameter clip {
            size *
            position 3
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Clipping levels}
            helpkey *
         }

         parameter comp {
            position 2
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
         }

         parameter kurtosis {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter logfile {
            position 4
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {File for logging results}
            helpkey *
         }

         parameter maxcoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter maxwcs {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter maximum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter maxpos {
            size *
            type _INT64
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter median {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter mincoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter minimum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter minpos {
            size *
            type _INT64
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter minwcs {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to analyse}
            helpkey *
         }

         parameter numbad {
            type _INT64
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter numgood {
            type _INT64
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter numpix {
            type _INT64
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter order {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Report order statistics?}
            default FALSE
            helpkey *
          }

        parameter percentiles {
            size *
            type _REAL
            vpath DEFAULT
            prompt {List of percentiles}
            default !
            helpkey *
          }

         parameter perval {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            helpkey *
          }

         parameter sigma {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter skewness {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter total {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

      }

      action sub {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
         }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

      }

      action substitute {
         alias {subs(titute)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component(s) to process}
            helpkey *
            default Data
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF in which values are to be substituted}
            helpkey *
         }

         parameter interp {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Look-up table interpolation method}
            helpkey *
            default None
         }

         parameter lut {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Look-up table}
            helpkey *
            default !
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF containing substituted values}
            helpkey *
         }

         parameter newval {
            position 4
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {New value to substitute}
            helpkey *
         }

         parameter oldval {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {The value to be replaced}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter type {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Output numeric type}
            default !
            helpkey *
         }

      }

      action surfit {
         alias {surf(it)}

         helplib {$KAPPA_HELP}

         parameter auto {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Automatic evaluation?}
            default TRUE
            helpkey *
         }

         parameter bindim {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Dimensions of the bins used to estimate the local background}
            helpkey *
         }

         parameter clip {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clipping standard deviations during binning}
            helpkey *
            default 2 3
            size *
         }

         parameter estimator {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Estimator for the binning}
            helpkey *
            default MODE
         }

         parameter evaluate {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Method of evaluation of the fitted output array}
            helpkey *
            default INTERPOLATE
         }

         parameter fitclip {
            size *
            type _REAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clipping rms errors for the fitted bins}
            helpkey *
            default !
         }

         parameter fittype {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fitting method}
            helpkey *
            default SPLINE
         }

         parameter genvar {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Generate output variances from fitting errors?}
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store fitting results}
            default !
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be fitted}
            helpkey *
         }

         parameter knots {
            size *
            type _INTEGER
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of interior knots (1-11)}
            helpkey *
            default 4
         }

         parameter order {
            size *
            type _INTEGER
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Orders of the polynomials along each direction}
            helpkey *
            default 3
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Fitted image}
            helpkey *
         }

         parameter rms {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter thrhi {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Upper threshold cutoff before binning}
            helpkey *
            default !
         }

         parameter thrlo {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Lower threshold cutoff before binning}
            helpkey *
            default !
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {Title for surface fit}
            helpkey *
         }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Fraction of good pixels for bin to be included}
            helpkey *
         }

      }

      action thresh {
         alias {thre(sh)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 7
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to process}
            helpkey *
            default Data
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to have thresholds applied}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold data after application of thresholds}
            helpkey *
         }

         parameter newhi {
            position 6
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {New value for pixels above upper threshold}
            helpkey *
         }

         parameter newlo {
            position 5
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {New value for pixels below lower threshold}
            helpkey *
         }

         parameter thrhi {
            position 4
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Higher threshold cutoff}
            helpkey *
         }

         parameter thrlo {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Lower threshold cutoff}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter numhi {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter numlo {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter numrange {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter numsame {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

      }

      action trandat {
         alias {trand(at)}

         helplib {$KAPPA_HELP}

         parameter auto {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Automatic calculation of co-ordinates?}
            helpkey *
            default FALSE
         }

         parameter bad {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Initialise array with bad pixels?}
            helpkey *
            default TRUE
         }

         parameter dtype {
            position 6
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Type of the data values}
            helpkey *
            default _REAL
         }

         parameter freename {
            position 1
            type FILENAME
            access READ
            vpath PROMPT
            prompt {Free-format data file}
            helpkey *
         }

         parameter lbound {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Pixel lower bounds of the output NDF}
            helpkey *
         }

         parameter ndf {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter poffset {
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Data co-ordinates at pixel co-ordinates origin}
            helpkey *
            default !
            size *
         }

         parameter poscols {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Co-ordinate columns}
            helpkey *
            default 1 2
            size *
         }

         parameter pscale {
            position 5
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Pixel-to-pixel distances}
            helpkey *
            default 1.0 1.0
            size *
         }

         parameter quantum {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Work array increment}
            helpkey *
            default 2048
         }

         parameter shape {
            size *
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Shape of the output NDF}
            helpkey *
         }

         parameter title {
            position 7
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            helpkey *
            default {KAPPA - Trandat}
         }

         parameter valcol {
            position 4
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Data value column}
            helpkey *
            default 3
         }

      }

      action trig {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF data structure}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
         }
         parameter trigfunc {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            prompt {Trig function}
            ppath CURRENT
            helpkey *
         }
         parameter title {
            position 4
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }
      }

      action kapversion {

         helplib {$KAPPA_HELP}

         parameter compare {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT
            default !
            prompt {The version string for comparison}
            helpkey *
        }

         parameter result {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
        }

      }

      action wiener {
         alias {wien(er)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter model {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding the model image}
            helpkey *
         }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
         }

         parameter pmodel {
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Constant power per pixel in model image}
            helpkey *
         }

         parameter pnoise {
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Constant noise power per pixel}
            helpkey *
         }

         parameter psf {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {An NDF holding the PSF}
            helpkey *
         }

         parameter quiet {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Is the model devoid of noise?}
            helpkey *
         }

         parameter thresh {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0625
            prompt {Truncation fractional threshold of PSF}
            helpkey *
         }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
         }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.001
            prompt {Weight limit for good output pixels}
            helpkey *
         }

         parameter xcentre {
            position 4
            type _INTEGER
            ppath DYNAMIC
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
         }

         parameter ycentre {
            position 5
            type _INTEGER
            ppath DYNAMIC
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
         }

      }

      action zaplin {
         alias {zapl(in)}

         helplib {$KAPPA_HELP}

         parameter colin {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {Filename containing the line/column limits}
            helpkey *
         }

         parameter colout {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store the line/column limits}
            default !
            helpkey *
         }

         parameter columns {
            type LITERAL
            prompt {Bounds on axis 1 of the area to be replaced}
            ppath CURRENT
            helpkey *
         }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be modified}
            helpkey *
         }

         parameter lincol {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Lines, Columns or Region?}
            default Lines
            helpkey *
         }

         parameter lines {
            type LITERAL
            prompt {Bounds on axis 2 of the area to be replaced}
            ppath CURRENT
            helpkey *
         }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            prompt {The PGPLOT type for markers}
            ppath CURRENT DEFAULT
            default 2
            helpkey *
         }

         parameter mode {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode to obtain area limits}
            default Interface
            helpkey *
         }

         parameter noise {
            type _LOGICAL
            vpath DEFAULT
            default FALSE
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Image after being modified}
            helpkey *
         }

         parameter plot {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {What sort of graphics should be used?}
            ppath CURRENT DEFAULT
            default Adapt
            helpkey *
         }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Style for graphics}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter title {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Title for output image}
            default !
            helpkey *
         }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {The two current Frame axes to be used}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

         parameter zaptype {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Type of zapping}
            default Linear
            helpkey *
         }

      }

      action listmake {
         alias {listma(ke)}

         helplib {$KAPPA_HELP}

         parameter catframe {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Output catalogue co-ordinate Frame}
            helpkey *
            default !
        }

         parameter catepoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Output catalogue epoch}
            helpkey *
        }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter dim {
            type _INTEGER
            access READ
            ppath CURRENT DEFAULT
            prompt {Number of axes for each position}
            default 2
            helpkey *
         }

         parameter epoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
         }

         parameter file {
            position 4
            type FILENAME
            ppath CURRENT
            prompt {Text file containing positions}
            helpkey *
         }

         parameter frame {
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Co-ordinate Frame in which positions are defined}
            helpkey *
            default PIXEL
         }

         parameter incat {
            type FILENAME
            vpath DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-GLOBAL.CATALOGUE
            prompt {Input positions list}
            default !
            helpkey *
         }

         parameter mode {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode to obtain positions}
            default Interface
            helpkey *
         }

         parameter ndf {
            position 2
            type NDF
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Reference NDF}
            helpkey *
         }

         parameter outcat {
            position 1
            type LITERAL
            access WRITE
            association ->GLOBAL.CATALOGUE
            prompt {Output positions list}
            helpkey *
         }

         parameter position {
            type LITERAL
            ppath default
            prompt {A position for the output list}
            default !
            helpkey *
         }

         parameter title {
            type LITERAL
            prompt {A title for the output list}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
         }

      }

      action listshow {
         alias {listsh(ow)}

         helplib {$KAPPA_HELP}

         parameter catframe {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Output catalogue co-ordinate Frame}
            helpkey *
            default !
        }

         parameter catepoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Output catalogue epoch}
            helpkey *
        }

         parameter close {
            type _LOGICAL
            prompt {Are polygons to be closed?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
         }

         parameter comp {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {NDF component to display}
            helpkey *
            default Data
         }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter dim {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter device {
            position 6
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
         }

         parameter epoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
         }

         parameter first {
            position 3
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Lowest position identifier to display}
            helpkey *
         }

         parameter frame {
            position 2
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Required co-ordinate Frame}
            helpkey *
            default !
         }

         parameter geodesic {
            type _LOGICAL
            prompt {Should polygon edges be geodesic curves?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter incat {
            position 1
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list}
            helpkey *
         }

         parameter just {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Justification for displayed text strings}
            helpkey *
            default CC
         }

         parameter label {
            type _LOGICAL
            prompt {Are plotted positions to be labelled?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter labtype {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Type of label to display}
            helpkey *
            default !
         }

         parameter last {
            position 4
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Highest position identifier to display}
            helpkey *
         }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to store selected co-ordinates}
            default !
            helpkey *
         }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {The PGPLOT type for position markers}
            default 2
            helpkey *
         }

         parameter method {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Re-sampling method}
            helpkey *
            default {Nearest}
         }

         parameter name {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Name of picture with which to align positions}
            helpkey *
            default DATA
         }

         parameter ndf {
            type NDF
            access READ
            vpath DEFAULT
            prompt {Input NDF}
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

         parameter number {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            association ->GLOBAL.CATALOGUE
            prompt {Output positions list}
            default !
            helpkey *
         }

         parameter params {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Auxiliary resampling parameters}
            helpkey *
         }

         parameter pixvals {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter plot {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default NONE
            prompt {What sort of graphics should be used?}
            helpkey *
         }

         parameter posns {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter step {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Increment between displayed positions}
            helpkey *
         }

         parameter stcscol {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath DEFAULT
            prompt {Name of column holding STC-S descriptions}
            helpkey *
            default Shape
          }

         parameter strings {
            type LITERAL
            ppath DEFAULT
            prompt {Strings to mark positions}
            helpkey *
            default !
         }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Style for graphics and formatted axis values}
            helpkey *
            default !
         }

      }

      action profile {
         alias {prof(ile)}

         helplib {$KAPPA_HELP}

         parameter catframe {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Output catalogue co-ordinate Frame}
            helpkey *
            default !
        }

         parameter catepoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Output catalogue epoch}
            helpkey *
        }

         parameter finish {
            position 4
            type LITERAL
            prompt {Position at the end of the profile}
            ppath DYNAMIC
            helpkey *
         }

         parameter geodesic {
            type _LOGICAL
            prompt {Use geodesic curves for the profile?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
         }

         parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list holding co-ordinates defining the profile}
            helpkey *
         }

         parameter mode {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method to use to determine the sample positions}
            default Curve
            helpkey *
         }

         parameter nsamp {
            position 5
            type _INTEGER
            prompt {Number of samples required along the profile}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default !
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
         }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Output positions list to hold sample positions}
            association ->GLOBAL.CATALOGUE
            default !
            helpkey *
         }

         parameter start {
            position 3
            type LITERAL
            prompt {Position at the start of the profile}
            ppath DYNAMIC
            helpkey *
         }

      }

      action wcsmosaic {
         alias {wcsm(osaic)}

         helplib {$KAPPA_HELP}

         parameter acc {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.05
            prompt {Positional accuracy in pixels}
            helpkey *
         }

         parameter alignref {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Align using the WCS attributes of the reference?}
            helpkey *
            default FALSE
         }

         parameter conserve {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Conserve flux whilst rebinning?}
            helpkey *
            default TRUE
         }

         parameter flbnd {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter fubnd {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter genvar {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Generate output variances from input spread?}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input images}
            helpkey *
         }

         parameter lbnd {
            size *
            position 3
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Lower pixel index bounds for output image}
            helpkey *
         }

         parameter lbound {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter maxpix {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1000
            prompt {Scale size for mappings (in pixels)}
            helpkey *
         }

         parameter method {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default SincSinc
            prompt {Interpolation method}
            helpkey *
         }

         parameter norm {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Normalise output values?}
            helpkey *
            default TRUE
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            helpkey *
         }

         parameter params {
            type _DOUBLE
            access READ
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Interpolation parameters}
            helpkey *
         }

         parameter ref {
            position 5
            type NDF
            access READ
            ppath DEFAULT
            default !
            prompt {The reference image}
            helpkey *
         }

         parameter ubnd {
            size *
            position 4
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Upper pixel index bounds for output image}
            helpkey *
         }

         parameter ubound {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
         }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Use input variances to weight data?}
            helpkey *
         }

         parameter wlim {
            type _REAL
            prompt {Minimum weight for valid output pixels}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0E-10
            helpkey *
         }

         parameter weights {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weights for each NDF}
            helpkey *
         }
      }

      action wcsalign {
         alias {wcsal(ign)}

         helplib {$KAPPA_HELP}

         parameter abort {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Abort after first failure?}
            helpkey *
         }

         parameter acc {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.05
            prompt {Positional accuracy in pixels}
            helpkey *
         }

         parameter alignref {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Align using the WCS attributes of the reference?}
            helpkey *
            default FALSE
         }

         parameter conserve {
            type _LOGICAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Conserve flux?}
            helpkey *
         }

         parameter in {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input images}
            helpkey *
         }

         parameter insitu {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Modify input NDFs in-situ?}
            helpkey *
         }

         parameter lbnd {
            size *
            position 3
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Lower pixel index bounds for output images}
            helpkey *
         }

         parameter maxpix {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1000
            prompt {Scale size for mappings (in pixels)}
            helpkey *
         }

         parameter method {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default SincSinc
            prompt {Interpolation method}
            helpkey *
         }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output images}
            helpkey *
         }

         parameter params {
            type _DOUBLE
            access READ
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Interpolation parameters}
            helpkey *
         }

         parameter ref {
            position 5
            type NDF
            access READ
            ppath DEFAULT
            default !
            prompt {The reference image}
            helpkey *
         }

         parameter refcat {
            type FILENAME
            vpath default
            ppath GLOBAL CURRENT DEFAULT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list defining required WCS}
            default !
            helpkey *
         }

         parameter rebin {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Create output pixel values by rebinning input pixels?}
            helpkey *
            default FALSE
         }

         parameter ubnd {
            size *
            position 4
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Upper pixel index bounds for output images}
            helpkey *
         }

         parameter wlim {
            type _REAL
            prompt {Minimum weight for valid output pixels}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
         }

      }

      action wcsslide {
         alias {wcsslid(e) wcssli(de)}

         helplib {$KAPPA_HELP}

         parameter abs {
            position 2
            size *
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Absolute translation vector}
            helpkey *
        }

         parameter fid {
            size *
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Co-ordinates of fiducial point}
            helpkey *
        }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to modify}
            helpkey *
        }

         parameter obj {
            size *
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Co-ordinates of standard object}
            helpkey *
        }

         parameter stype {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Shift type}
            default Absolute
            helpkey *
        }

      }

      action wcstran {
         alias {wcst(ran)}

         helplib {$KAPPA_HELP}

         parameter epochin {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of input position}
            helpkey *
         }

         parameter epochout {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of output position}
            helpkey *
         }

         parameter framein {
            position 3
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Input co-ordinate Frame}
            helpkey *
            default PIXEL
         }

         parameter frameout {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Output co-ordinate Frame}
            helpkey *
            default !
         }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
         }

         parameter posin {
            position 2
            type LITERAL
            prompt {Position to be transformed}
            ppath CURRENT
            helpkey *
         }

         parameter posout {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
         }

         parameter skydeg {
            type _integer
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {No. of decimal places for formatted sky axis degree values}
            default 0
            helpkey *
         }

      }
   }

   command exp10 {
      task expon {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=10D0
      }
   }

   command expe {
      task expon {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=natural
      }
   }

   command fitswrite {
      task fitsmod {
         taskinherit ndf
         taskinherit keyword
         taskinherit comment
         taskinherit string
         taskinherit value
         taskparam edit=write
         taskparam mode=interface
         taskparam position=\!
      }
   }

   command kapdemo {
      obey {$KAPPA_DIR/stardemo.tcl}
   }

   command log10 {
      task logar {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=10D0
      }
   }

   command loge {
      task logar {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=natural
      }
   }

   command lutaips0 {
      alias {lutaips0}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/aips0_lut}
      }
   }

   command lutbackgr {
      alias {lutbackgr}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/backgr_lut}
      }
   }

   command lutbgyrw {
      alias {lutbgyrw}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/bgyrw_lut}
      }
   }

   command lutblue {
      alias {lutblue}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/blue_lut}
      }
   }

   command lutblulut {
      alias {lutblulut}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/blulut_lut}
      }
   }

   command lutbrown {
      alias {lutbrown}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/brown_lut}
      }
   }

   command lutcol {
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=colour
      }
   }

   command lutcold {
      alias {lutcold}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/cold_lut}
      }
   }

   command lutcolor {
      alias {lutcolor}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/color_lut}
      }
   }

   command lutcont {
      alias {lutcont}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/cont_lut}
      }
   }

   command lutcubehelix0 {
      alias {lutcubehelix0}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/cubehelix0_lut}
      }
   }

   command lutcubehelix1 {
      alias {lutcubehelix1}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/cubehelix1_lut}
      }
   }

   command lutfc {
      alias {lutfc}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/fc_lut}
      }
   }

   command lutgreen {
      alias {lutgreen}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/green_lut}
      }
   }

   command lutgrey {
      alias {lutg(rey)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=grey
      }
   }

   command lutheat {
      alias {lutheat}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/heat_lut}
      }
   }

   command lutidl11 {
      alias {lutidl11}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl11_lut}
      }
   }

   command lutidl12 {
      alias {lutidl12}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl12_lut}
      }
   }

   command lutidl14 {
      alias {lutidl14}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl14_lut}
      }
   }

   command lutidl15 {
      alias {lutidl15}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl15_lut}
      }
   }

   command lutidl2 {
      alias {lutidl2}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl2_lut}
      }
   }

   command lutidl4 {
      alias {lutidl4}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl4_lut}
      }
   }

   command lutidl5 {
      alias {lutidl5}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl5_lut}
      }
   }

   command lutidl6 {
      alias {lutidl6}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/idl6_lut}
      }
   }

   command lutikon {
      alias {lutikon}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/ikon_lut}
      }
   }

   command lutisophot {
      alias {lutisophot}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/isophot_lut}
      }
   }

   command lutlight {
      alias {lutlight}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/light_lut}
      }
   }

   command lutlogo {
      alias {lutlogo}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/logo_lut}
      }
   }

   command lutmanycol {
      alias {lutmanycol}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/manycol_lut}
      }
   }

   command lutmraospiral {
      alias {lutmraospiral}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/mraospiral_lut}
      }
   }

   command lutneg {
      alias {lutn(eg)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=negative
      }
   }

   command lutpastel {
      alias {lutpastel}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/pastel_lut}
      }
   }

   command lutrainbow1 {
      alias {lutrainbow1}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/rainbow1_lut}
      }
   }

   command lutrainbow2 {
      alias {lutrainbow2}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/rainbow2_lut}
      }
   }

   command lutrainbow3 {
      alias {lutrainbow3}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/rainbow3_lut}
      }
   }

   command lutrainbow4 {
      alias {lutrainbow4}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/rainbow4_lut}
      }
   }

   command lutrainbow {
      alias {lutrainbow}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/rainbow_lut}
      }
   }

   command lutramp {
      alias {lutramp}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/ramp_lut}
      }
   }

   command lutramps {
      alias {lutramps}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/ramps_lut}
      }
   }

   command lutrandom1 {
      alias {lutrandom1}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/random1_lut}
      }
   }

   command lutrandom2 {
      alias {lutrandom2}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/random2_lut}
      }
   }

   command lutrandom3 {
      alias {lutrandom3}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/random3_lut}
      }
   }

   command lutrandom4 {
      alias {lutrandom4}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/random4_lut}
      }
   }

   command lutrandom5 {
      alias {lutrandom5}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/random5_lut}
      }
   }

   command lutrandom6 {
      alias {lutrandom6}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/random6_lut}
      }
   }

   command lutrandom {
      alias {lutrandom}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/random_lut}
      }
   }

   command lutread {
      alias {lutre(ad)}
      task lutable {
         taskinherit device
         taskinherit lut
         taskparam mapping=linear
         taskparam coltab=external
      }
   }

   command lutreal {
      alias {lutreal}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/real_lut}
      }
   }

   command lutred {
      alias {lutred}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/red_lut}
      }
   }

   command lutsmooth1 {
      alias {lutsmooth1}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/smooth1_lut}
      }
   }

   command lutsmooth2 {
      alias {lutsmooth2}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/smooth2_lut}
      }
   }

   command lutsmooth3 {
      alias {lutsmooth3}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/smooth3_lut}
      }
   }

   command lutsmooth {
      alias {lutsmooth}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/smooth_lut}
      }
   }

   command lutspectrum {
      alias {lutspectrum}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/spectrum_lut}
      }
   }

   command lutspec {
      alias {lutspec}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/spectrum_lut}
      }
   }

   command lutspecxbl2yel {
      alias {lutspecxbl2yel}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/specxbl2yel_lut}
      }
   }

   command lutstaircase {
      alias {lutstaircase}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/staircase_lut}
      }
   }

   command lutstairs8 {
      alias {lutstairs8}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/stairs8_lut}
      }
   }

   command lutstairs9 {
      alias {lutstairs9}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/stairs9_lut}
      }
   }

   command lutstandard {
      alias {lutstandard}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/standard_lut}
      }
   }

   command lutwarm {
      alias {lutwarm}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/warm_lut}
      }
   }

   command lutzebra {
      alias {lutzebra}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/zebra_lut}
      }
   }

   command fitsedit {
      obey {$KAPPA_DIR/fitsedit.sh}
   }

   command fitshead {
      obey {$KAPPA_DIR/fitshead.sh}
   }

   command outline {
      task contour {
         alias {outl(ine)}
         taskinherit axes
         taskinherit device
         taskinherit margin
         taskinherit ndf
         taskinherit pens
         taskinherit style
         taskparam clear=n
         taskparam mode=bounds
         taskparam penrot=y
      }
   }

   command picbase {
      alias {picb(ase)}
      task piclist {
         taskinherit device
         taskparam picnum=1
      }
   }

   command picdata {
      alias {picd(ata)}
      task piclist {
         taskinherit device
         taskparam name=data
         taskparam picnum=last
      }
   }

   command picframe {
      alias {picf(rame)}
      task piclist {
         taskinherit device
         taskparam name=frame
         taskparam picnum=last
      }
   }

   command picgrid {
      alias {picg(rid)}
      task picdef {
         taskinherit current
         taskinherit device
         taskinherit fill
         taskinherit labelno
         taskinherit outline
         taskinherit xpic
         taskinherit ypic
         taskparam mode=array
         taskparam fraction=1.0
         taskparam prefix=""
      }
   }

   command piclast {
      alias {piclas(t)}
      task piclist {
         taskinherit device
         taskparam picnum=last
      }
   }

   command picxy {
      alias {picx(y)}
      task picdef {
         taskinherit current
         taskinherit device
         taskinherit lbound
         taskinherit outline
         taskinherit ubound
         taskparam mode=xy
         taskparam fraction=1.0
      }
   }

   command transformer {
      obsolete { The transformer command has been retired to the KAPRH package---see SUN/239.  Use "regrid" instead. }
   }

   command traninvert {
      obsolete { The traninvert command has been retired to the KAPRH package---see SUN/239. }
   }

   command tranjoin {
      obsolete { The tranjoin command has been retired to the KAPRH package---see SUN/239. }
   }

   command tranmake {
      obsolete { The tranmake command has been retired to the KAPRH package---see SUN/239. }
   }

   command trantrace {
      obsolete { The trantrace command has been retired to the KAPRH package---see SUN/239. }
   }

   command idset {
      obsolete { The idset command has been retired to the KAPRH package---see SUN/239. Use "gdset" instead. }
   }

   command idclear {
      obsolete { The idclear command has been retired to the KAPRH package---see SUN/239.  Use "gdclear" instead. }
   }

   command idstate {
      obsolete { The idstate command has been retired to the KAPRH package---see SUN/239.  Use "gdstate" instead. }
   }

   command ovset {
      obsolete { The ovset command has been retired to the KAPRH package---see SUN/239. }
   }

   command ovclear {
      obsolete { The ovclear command has been retired to the KAPRH package---see SUN/239. }
   }

   command idinvisible {
      obsolete { The idinvisible command has been moved to the KAPRH package---see SUN/239. }
   }

   command idpazo {
      obsolete { The idpazo command has been moved to the KAPRH package---see SUN/239. }
   }

   command lutflip {
      obsolete { The lutflip command has been moved to the KAPRH package---see SUN/239. }
   }

   command luthilite {
      obsolete { The luthilite has been moved to the KAPRH package---see SUN/239. }
   }

   command lutrot {
      obsolete { The lutrot command has been moved to the KAPRH package---see SUN/239. }
   }

   command luttweak {
      obsolete { The luttweak command has been moved to the KAPRH package---see SUN/239. }
   }

   command contover {
      obsolete { The contover command has been retired.  Use "contour clear=no" instead or use the contover command in the KAPRH package---see SUN/239. }
   }

   command greyplot {
      obsolete { The greyplot command has been retired.  Use "display key=y" instead or use the greyplot command in the KAPRH package---see SUN/239. }
   }

   command inspect {
      obsolete { The inspect command has been retired.  Use GAIA instead or use the inspect command in the KAPRH package---see SUN/239. }
   }

   command mosaic {
      obsolete { The mosaic command has been retired.  Use ccdpack:makemos or use the mosaic command in the KAPRH package---see SUN/239. }
   }

   command quilt {
      obsolete { The quilt command has been retired.  Use ccdpack:makemos or use the quilt command in the KAPRH package---see SUN/239. }
   }

   command snapshot {
      obsolete { The snapshot command has been retired.  Use a utility such as gimp or xv or use the snapshot command in the KAPRH package---see SUN/239. }
   }

   command turbocont {
      obsolete { The turbocont command has been retired.  Use "contour" instead or use the turbocont command in the KAPRH package---see SUN/239. }
   }

   command crelut {
      obsolete { The crelut command has been retired.  Use "lutedit" instead or use the crelut command in the KAPRH package---see SUN/239. }
   }

   command fitsin {
      obsolete { The fitsin command has been removed. Supporting the MAG library has proven difficult and the removal of the MAG library has lead to the removal of this command. Consider using an older KAPPA version. }
   }

   icl {defhelp kappa $KAPPA_HELP 0}

   display {

     KAPPA commands are now available -- (Version @PACKAGE_VERSION@)

     Type kaphelp for help on KAPPA commands.
     Type "showme sun95" to browse the hypertext documentation.

     See the "Release Notes" section of SUN/95 for details of the
     changes made for this release.

   }

}
